<?xml version="1.0" encoding="UTF-8"?>
<project name="project" default="executeTests">
	<dirname property="fvttop" file="../../../../../" />

	<property file="ezwas.props" />

	<!-- Load the bootstrapping.properties file. There are two non-standard
	       properties required in bootstrapping.properties that are needed
	       to execute the unittest script:
	         localWASHome
	         wasBuildNumber
	       If executing this build file manually, those properties should be
	       added to bootrapping.properties beforehand. When executing TestBuild.xml
	       they will be added automatically.
	       Also, ant should reside in common/jars/ant. When executing the
	       TestBuild.xml, ANT is put there using what is provided by autoWAS.
	   -->
	<property name="fvtBaseDir" value="${fvttop}/autoFVT" />
	<property file="${fvtBaseDir}/bootstrapping.properties" />
	<property name="washome" value="${ezwas.local.was.home.dir}" />
	<property name="buildnumber" value="temp" />
	<property name="anthome" value="${fvtBaseDir}/common/jars/ant" />
	<property name="out.log" value="${fvtBaseDir}/out.log" />
	<property name="out.log.final" value="${fvtBaseDir}/results/out.log" />
	<property name="execution.complete.log" value="${fvtBaseDir}/executionComplete.log" />

    <path id="classpath">
      <pathelement location="${fvtBaseDir}/common/jars/public.api.jar"/>
      <pathelement location="${fvtBaseDir}/common/jars/provider.api.jar"/>
      <pathelement location="${fvtBaseDir}/common/jars/provider.wsadmin.jar"/>
      <pathelement location="${fvtBaseDir}/common/jars/provider.rxa.jar"/>
      <pathelement location="${fvtBaseDir}/common/jars/jiiws.jar"/>
      <pathelement location="${fvtBaseDir}/common/jars/ssh.jar"/>
      <pathelement location="${fvtBaseDir}/common/jars/jlanclient.jar"/>
      <pathelement location="${fvtBaseDir}/common/jars/remoteaccess.jar"/>
      <pathelement location="${fvtBaseDir}/build/classes"/>
    </path>

	<!-- User defined property file -->
	<condition property="test.bin" value="nt">
		<os family="windows" />
	</condition>
	<condition property="test.bin" value="unix">
		<not>
			<os family="windows" />
		</not>
	</condition>

	<condition property="test.extension" value="bat">
		<os family="windows" />
	</condition>
	<condition property="test.extension" value="sh">
		<not>
			<os family="windows" />
		</not>
	</condition>

	<property name="unittest" value="${fvtBaseDir}/bin/${test.bin}/unittest.${test.extension}" />

	<target name="clean">
		<delete file="${out.log}" />
		<delete file="${out.log.final}" />
		<delete file="${execution.complete.log}" />
	</target>

	<target name="printEnvZOS">
		<echo message="washome: ${washome}" />
		<echo message="buildnumber: ${buildnumber}" />
		<echo message="anthome: ${anthome}" />
		<echo message="fvttop: ${fvttop}" />
		<echo message="fvtBaseDir: ${fvtBaseDir}" />
		<echo message="out.log: ${out.log}" />
		<echo message="out.log.final: ${out.log.final}" />
		<echo message="execution.complete.log: ${execution.complete.log}" />
	</target>

	<target name="executeTests" depends="clean, printEnvZOS">
		<condition property="useShell" value="bin/bash">
			<equals arg1="${platformName}" arg2="sun" />
		</condition>
		<condition property="useShell" value="bin/sh">
			<not>
				<equals arg1="${platformName}" arg2="sun" />
			</not>
		</condition>

		<replace file="${unittest}" token="bin/sh" value="${useShell}" />
        <chmod file="${unittest}" perm="777" />
        
		<exec dir="${fvtBaseDir}" executable="${unittest}" failonerror="false">
			<arg value="${fvttop}" />
			<arg value="${washome}" />
			<arg value="${buildnumber}" />
			<arg value="IBASE" />
            <arg value="${zGroupingDef}" />
		</exec>

		<exec dir="${fvtBaseDir}" executable="${unittest}" failonerror="false">
			<arg value="${fvttop}" />
			<arg value="${washome}" />
			<arg value="${buildnumber}" />
			<arg value="IBASE" />
			<arg value="compile" />
		</exec>

        <javac compiler="modern" srcdir="${fvtBaseDir}/zos/autowas/src" destdir="${fvtBaseDir}/build/classes" debug="${debug}" failonerror="${failonerror}" deprecation="${deprecation}">
			<include name="**/*.java" />
			<classpath refid="classpath" />
		</javac>

		<copy file="${fvttop}/FVT/ws/code/websvcs.fvt/bootstrapping.properties" tofile="${fvttop}/FVT/ws/code/websvcs.fvt/bootstrapping.properties.beforezosorig" overwrite="false" />

		<java classname="com.ibm.ws.wsfvt.zos.EzWASRun" fork="true" dir="${fvtBaseDir}">
			<arg value="${fvttop}" />
			<arg value="${ezwas.remote.test.dir}" />
			<arg value="setup" />
			<classpath refid="classpath" />
		</java>

		<propertyfile file="${fvttop}/FVT/ws/code/websvcs.fvt/bootstrapping.properties">
			<entry key="was.cell.1.WASUsername" value="user1" />
			<entry key="was.cell.1.WASPassword" value="security" />
		</propertyfile>

		<delete file="${fvttop}/websvcs.zip" failonerror="false" />
		<zip file="${fvttop}/websvcs.zip">
			<zipfileset dir="${fvttop}/FVT" prefix="FVT">
				<include name="**" />
			</zipfileset>
		</zip>

		<delete file="${fvttop}/ant.zip" failonerror="false" />

		<zip file="${fvttop}/ant.zip">
			<zipfileset dir="${ezwas.local.ant.home.dir}" prefix="ant">
				<include name="**" />
			</zipfileset>
		</zip>

		<java classname="com.ibm.ws.wsfvt.zos.EzWASRun" fork="true" dir="${fvtBaseDir}">
			<arg value="${fvttop}" />
			<arg value="${ezwas.remote.test.dir}" />
			<arg value="transfer" />
			<classpath refid="classpath" />
		</java>

		<java classname="com.ibm.ws.wsfvt.zos.EzWASRun" fork="true" dir="${fvtBaseDir}">
			<arg value="${fvttop}" />
			<arg value="${ezwas.remote.test.dir}" />
			<arg value="run" />
			<classpath refid="classpath" />
		</java>
	</target>
</project>
