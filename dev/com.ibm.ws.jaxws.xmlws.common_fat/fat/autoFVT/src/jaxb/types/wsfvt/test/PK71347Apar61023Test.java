//
// autoFVT/src/jaxb/types/wsfvt/test/PK71347Apar61023Test.java, WAS.websvcs.fvt, WAS85.FVT, cf011231.01
//
// IBM Confidential OCO Source Material
// (C) COPYRIGHT International Business Machines Corp. 2006
// The source code for this program is not published or otherwise divested
// of its trade secrets, irrespective of what has been deposited with the
// U.S. Copyright Office.
//
// Thanks to Lizet E. for contributing the test.
//
// Change History:
// Date      UserId      Defect          Description
// ----------------------------------------------------------------------------
// 04/15/09  btiffany    PK71347.fvt     New File
//

package jaxb.types.wsfvt.test;

import java.util.List;
import java.util.ArrayList;

import junit.framework.Test;
import junit.framework.TestCase;
import junit.framework.TestSuite;

import junit.textui.TestRunner;

import jaxb.types.wsfvt.client.JaxbTypesClient;
import javax.xml.bind.JAXBContext;
import javax.xml.bind.Marshaller;
import javax.xml.bind.Unmarshaller;
import javax.xml.bind.JAXBElement;
import com.ibm.ws.wsfvt.build.tools.AppConst;


import attr_nil.test.*;  // import classes generated by xjc in buildtest.xml

/**
 * This class will test that when the WAS special blend of jdk and jaxb components
 * work together to marshal/unmarshal a nil element, attributes on the nil element are
 * not lost. 
 * 
 * This was implemented in fp23 of wsfp, and probably fp3 of WAS7.
 */
public class PK71347Apar61023Test extends TestCase {

    /** 
     * A constructor to create a test case with a given name.
     *
     * @param name The name of the test case to be created
     */
    public PK71347Apar61023Test(String name) {
        super(name);
    }

    /** 
     * The main method.
     *
     * @param args The command line arguments
     */
    public static void main(String[] args) {
        TestRunner.run(suite());
    }

    /** 
     * This method controls which test methods to run.
     *
     * @return A suite of tests to run
     */
    public static Test suite() {
        return new TestSuite(PK71347Apar61023Test.class);
    }
    
    /** 
     * This test checks that when we un/marshal a nil element with attirbutes,
     * we don't lose the attributes.
     */
    public void testPK71347() throws Exception {
        try {
            JAXBContext jc = JAXBContext.newInstance("attr_nil.test");
            ckMarshal(jc);
            assertTrue("unmarshall failed", ckUnMarshal(jc));
        } catch(javax.xml.bind.JAXBException  e) {
            System.out.println("CAUGHT EXCEPTION main");
            e.printStackTrace();
        }
    }
        
    private static void ckMarshal(JAXBContext jc) {
        try {
            Marshaller m = jc.createMarshaller();
            m.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, Boolean.TRUE);

            PurchaseOrderType po = new PurchaseOrderType();
            po.setOrderDate(5);

            ObjectFactory o = new ObjectFactory();
            JAXBElement<PurchaseOrderType> pe = o.createPurchaseOrder(po);
            pe.setNil(true);

            //Marshall object into file created above. 

            System.out.println();
            System.out.println("Marshalling purchaseOrder.isNil()= " + pe.isNil());

            System.out.println("---------------------------------------------------------");
            m.marshal(pe, System.out);
            System.out.println("---------------------------------------------------------");

        } catch(Exception e) {
            System.out.println("CAUGHT EXCEPTION marshal");
            e.printStackTrace();
        }

    }

    /*
     * returns true if element unmarshalled ok
     */
    private boolean  ckUnMarshal(JAXBContext jc) {
        try {
            Unmarshaller um = jc.createUnmarshaller();
            String xmlFile = AppConst.FVT_HOME+"/src/jaxb/types/wsfvt/test/pk71347.xml";
            System.out.println();
            System.out.println("unmarshalling from " + xmlFile);
            JAXBElement j  = (JAXBElement) um.unmarshal(new java.io.FileInputStream( xmlFile )); 

            System.out.println("j.getValue()= " + j.getValue());
            System.out.println("j.isNil()= " + j.isNil());
            if(j.getValue() != null) {
                System.out.println("j.getValue()).getOrderDate()= " + ((PurchaseOrderType)j.getValue()).getOrderDate());
                return true;
            } else {
                System.out.println("PROBLEM: Lost attribute orderDate=\"5\"");
                return false;
            }

        } catch(Exception e) {
            System.out.println("CAUGHT EXCEPTION unmarshal ");
            e.printStackTrace();
            return false;
        }

    }

}
