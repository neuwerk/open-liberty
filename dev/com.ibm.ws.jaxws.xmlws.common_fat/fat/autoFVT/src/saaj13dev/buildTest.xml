<?xml version="1.0"?>                     
<!DOCTYPE project [
        <!ENTITY instance SYSTEM "../../instance.xml"><!-- file:34 -->
        <!ENTITY properties SYSTEM "../xmls/properties.xml"><!-- file:36 -->
        <!ENTITY paths SYSTEM "../xmls/path_refs.xml"><!-- file:31 -->
        <!ENTITY targets SYSTEM "../xmls/targets.xml"><!-- file:33 -->
        <!ENTITY taskdefs SYSTEM "../xmls/taskdefs.xml"><!-- file:34 -->
        <!ENTITY taskdefs_post_compile SYSTEM "../xmls/taskdefs_post_compile.xml"><!-- file:47 -->
]>

<!-- 1.6, 8/30/07

     Description: Build file for the SAAJ13 Dev Test
     
     Date        Author       Feature/Defect          Description
     08/01/2006  scheu        LIDB4238.1              New Tests for SAAJ 13 Development
     01/05/2007  ulbricht     394707.3.2              Change thinclient name
     07/31/2007  ulbricht     455649                  Change jar name
     08/30/2007  ulbricht     445305.1                Change thinclient names
-->
<project name="build" default="buildall" basedir=".">

     
  <!-- These are XML entity refs.  Basically these statements cause the
       files declared in the DOCTYPE at the top of the file to be imported
       into this build file.
  -->   
  &instance;
  &properties;
  &paths;
  &targets;
  &taskdefs;
  &taskdefs_post_compile;
  
     
  <!-- This property should match the package name of the test class.  The
       property is used in the targets.xml file when running any of the
       component-run* targets for running a single test case class.
  -->                     
  <property name="componentName" value="saaj13dev/devtest/wsfvt/saaj13"/>
  
     
  <!-- This path id is used in the targets.xml file when running any of
       the component-run* targets.  This allows setting the classpath 
       for an individual test.
  -->
  <path id="componentClasspath">
    <path refid="thinclientclasspath"/>
    <pathelement location="${WAS.base.dir}/runtimes/com.ibm.jaxws.thinclient_7.0.0.jar"/>
  </path>
     
  <target name="client" depends="setenv" />
  <target name="server" depends="setenv" />
 <target name="preinstall" depends="setenv" /> 
      
  <!-- The init target will initialize any directories, properties, etc.
       that are needed for the test.
  -->    
  <target name="init" depends="setenv">
    <antcall target="component-init"/>
    <mkdir dir="${FVT.build.work.dir}/saaj13dev/devtest"/>
  </target>                       
  
     
  <!-- The clean target will clean any files, classes, or directories
       so that a new copy of the test can be built and run.
  -->                       
  <target name="clean" depends="setenv">
    <delete dir="${FVT.build.classes.dir}/saaj13dev/devtest"/>
    <delete dir="${FVT.build.work.dir}/saaj13dev/devtest"/>
  </target>
  
                                                  
  <!-- The buildall target will execute all of the targets necessary
       before installing the test into WebSphere.
  -->                                                                                      
  <target name="buildall" depends="setenv, clean, init, server, client, test, preinstall"/>  
     
  <!-- The client target will build anything necessary for the test
       piece of the test.  Often this will just include compiling the
       the JUnit test case file.
  -->                               
  <target name="test" depends="setenv, client">
    <javac compiler="modern" srcdir="${FVT.base.dir}/src/saaj13dev"
           destdir="${FVT.build.classes.dir}"
           deprecation="${deprecation}"
           debug="${debug}"
           source="${build.tests.with.java.level}"
           target="${build.tests.with.java.level}"
           failonerror="${failonerror}">
      <classpath refid="classpath"/>
      <include name="**/wsfvt/saaj13/*.java"/>
    </javac>
  </target>         
  
</project>
