<?xml version="1.0"?>                     
<!DOCTYPE project [
        <!ENTITY instance SYSTEM "../../../instance.xml">
        <!ENTITY properties SYSTEM "../../xmls/properties.xml">
        <!ENTITY paths SYSTEM "../../xmls/path_refs.xml">
        <!ENTITY targets SYSTEM "../../xmls/targets.xml">
        <!ENTITY taskdefs SYSTEM "../../xmls/taskdefs.xml">
        <!ENTITY taskdefs_post_compile SYSTEM "../../xmls/taskdefs_post_compile.xml">
]>

<!--

    
    Change History:
    Date       UserId              Feature/Defect          Description
    ****************************************************************************
    11/18/09   varadan             F743-17947-01           New file for Singleton and WebServiceRef test
    12/03/09   jtnguyen            F743-17947-01           Add Startup (in DD) test
    12/07/09   jtnguyen            631370                  Add wsimport wsdllocation param to avoid error in Z
    05/27/10   btiffany            654377                  Add some more wsdllocation to avoid Z problems
-->


<project name="build" default="buildall" basedir=".">

     
  <!-- These are XML entity refs.  Basically these statements cause the
       files declared in the DOCTYPE at the top of the file to be imported
       into this build file.
  -->   
  &instance;
  &properties;
  &paths;
  &targets;
  &taskdefs;
  &taskdefs_post_compile;
  
     
  <!-- This property should match the package name of the test class.  The
       property is used in the targets.xml file when running any of the
       component-run* targets for running a single test case class.
  -->                     
  <property name="componentName" value="jaxwsejb31Singleton/annotationsRef/wsfvt/test"/>
  <property name="verbose.output" value="false" />

     
  <!-- This path id is used in the targets.xml file when running any of
       the component-run* targets.  This allows setting the classpath 
       for an individual test.
   --> 
  <path id="componentClasspath">
    <path refid="thinclientclasspath"/>
    <dirset dir="${FVT.build.classes.dir}">
       <include name="jaxwsejb31Singleton/annotationsRef/wsfvt/client"/>            
    </dirset>
  </path>
  
  
     
  <!-- The init target will initialize any directories, properties, etc.
       that are needed for the test.
  -->    
  <target name="init" depends="setenv">
    <antcall target="component-init"/>
    <mkdir dir="${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/ejb1"/>    
    <mkdir dir="${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/ejb1startup"/>    
    <mkdir dir="${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/ejb2"/>
  </target>                       
  
     
  <!-- The clean target will clean any files, classes, or directories
       so that a new copy of the test can be built and run.
  -->                       
  <target name="clean" depends="setenv">
    <delete dir="${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef"/>
    <delete file="${FVT.build.lib.dir}/jaxwsejb31Singleton-anno-Ejb2Add.jar"/>
    <delete file="${FVT.build.lib.dir}/jaxwsejb31Singleton-anno-Ejb1.jar"/>
    <delete file="${FVT.build.lib.dir}/jaxwsejb31Singleton-anno-Ejb1Startup.jar"/>
    <delete file="${FVT.build.installableApps.dir}/jaxwsejb31Singleton-anno-Ejb1.ear"/>    
    <delete file="${FVT.build.installableApps.dir}/jaxwsejb31Singleton-anno-Ejb1Startup.ear"/>    
    <delete file="${FVT.build.installableApps.dir}/jaxwsejb31Singleton-anno-Ejb2Add.ear"/>
    <delete file="${FVT.build.installableApps.dir}/jaxwsejb31Singleton-anno-Ejb1.war"/>    
    <delete file="${FVT.build.installableApps.dir}/jaxwsejb31Singleton-anno-Ejb1Startup.war"/>    
    <delete file="${FVT.build.installableApps.dir}/jaxwsejb31Singleton-anno-Ejb2Add.war"/>    
  </target>
  
                                                  
  <!-- The buildall target will execute all of the targets necessary
       before installing the test into WebSphere.
  -->                                                                                      
  <target name="buildall" depends="setenv, clean, init, server, client, test, preinstall"/> 
  
             
  <!-- The server target will build anything necessary for the server
       piece of the test.  Typically this target builds the server side
       EAR.
  -->                               
  <target name="server" depends="setenv">

    <!-- order to run:  all for Ejb2Add.ear, then Ejb1.ear, Ejb1Startup.ear (dependency on Ejb2Add) -->                                                                                         
 
 <!-- building Ejb2Add.ear -->
                                
    <javac compiler="modern" srcdir="${FVT.base.dir}/src/jaxwsejb31Singleton/annotationsRef/ejb2"
           destdir="${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/ejb2"
           deprecation="${deprecation}"
           debug="${debug}"
    	   source="${build.tests.with.java.level}"
    	   target="${build.tests.with.java.level}"
           failonerror="${failonerror}">
      <classpath refid="classpath"/>  
      <include name="**/server/*.java"/>
    </javac>
        
    
    
    <!-- copy server's source to classes directory for debugging -->
    <copy todir="${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/ejb2/jaxwsejb31Singleton/annotationsRef/ejb2/wsfvt/server">
          <fileset dir="${FVT.base.dir}/src/jaxwsejb31Singleton/annotationsRef/ejb2/wsfvt/server">
             <include name="*.java" />
          </fileset>
    </copy>
 
    <!-- wsgen -->      
        <wsgen genwsdl="true"
               keep="true"
               verbose="true"
               destdir="${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/ejb2"
               resourcedestdir="${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/ejb2"
               sei="jaxwsejb31Singleton.annotationsRef.ejb2.wsfvt.server.Ejb2Add">
            <classpath>
                <pathelement location="${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/ejb2" />
                <path refid="classpath" />
            </classpath>
        </wsgen>

        <mkdir dir="${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/ejb2/wsdl" />

    <!-- Move the wsdl and xsd  from FVT.build.classes.dir to wsdl directory-->
        <copy todir="${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/ejb2/wsdl">
            <fileset dir="${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/ejb2">
                <include name="*.wsdl" />
                <include name="*.xsd" />
            </fileset>
        </copy>

        <!-- Get the cells config info -->
        <readCellConfig prefix="server1"
                        key="defaultServer"
                        verbose="${verbose.output}" />

        
        <replace file="${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/ejb2/wsdl/Ejb2AddService.wsdl"
                 value="http://${server1.hostName}:${server1.WC_defaulthost}/jaxwsejb31Singleton-anno-Ejb2Add/Ejb2AddService">
            <replacefilter token="REPLACE_WITH_ACTUAL_URL" />
        </replace>

        
    <!-- create JAR -->        
        <jar jarfile="${FVT.build.lib.dir}/jaxwsejb31Singleton-anno-Ejb2Add.jar">
            <fileset dir="${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/ejb2">
                <include name="**/*class" />
                <include name="**/*java" />
            </fileset>
            <zipfileset dir="${FVT.base.dir}/src/jaxwsejb31Singleton/annotationsRef/ejb2/etc/" prefix="META-INF/">
                <include name="ejb-jar.xml" />
            </zipfileset>
            <zipfileset dir="${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/ejb2/wsdl"
                        prefix="META-INF/wsdl">
                <include name="*.wsdl" />
                <include name="*.xsd" />
            </zipfileset>
        </jar>


    <!-- create  EARs -->
        <ear earfile="${FVT.build.installableApps.dir}/jaxwsejb31Singleton-anno-Ejb2Add.ear"
             appxml="${FVT.base.dir}/src/jaxwsejb31Singleton/annotationsRef/ejb2/etc/application.xml">
            <fileset dir="${FVT.build.lib.dir}">
                <include name="jaxwsejb31Singleton-anno-Ejb2Add.jar" />
            </fileset>
			<metainf dir="${FVT.base.dir}/src/jaxwsejb31Singleton/annotationsRef/ejb2/etc/">
				<include name="was.policy" />
			</metainf>
        </ear>
        
 
 
  <!-- building Ejb1.ear -->
  
    <!-- add dependency to classpath --> 
      <path id="ejb1classpath">
        <path refid="classpath"/>
        <dirset dir="${FVT.build.classes.dir}">
           <include name="jaxwsejb31Singleton/annotationsRef/ejb2"/>            
        </dirset>
      </path>


    <!-- get dependency classes from Ejb2AddService.wsdl -->
    <wsimport                 
         wsdl="${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/ejb2/wsdl/Ejb2AddService.wsdl"            
         destdir="${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/ejb1"                                 
         verbose="true"                           
         package="jaxwsejb31Singleton.annotationsRef.ejb2.wsfvt.server"  
         keep="true"
         wsdllocation="/META-INF/wsdl/Ejb2AddService.wsdl" 
         sourcedestdir="${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/ejb1">     
    </wsimport>
                  
                                
    <javac compiler="modern" srcdir="${FVT.base.dir}/src/jaxwsejb31Singleton/annotationsRef/ejb1"
           destdir="${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/ejb1"
           deprecation="${deprecation}"
           debug="${debug}"
           source="${build.tests.with.java.level}"
           target="${build.tests.with.java.level}"
           failonerror="${failonerror}">
      <classpath refid="ejb1classpath"/>  
      <include name="**/server/*.java"/>
    </javac>
        
    
    
    <!-- copy server's source to classes directory for debugging -->
    <copy todir="${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/ejb1/jaxwsejb31Singleton/annotationsRef/ejb1/wsfvt/server">
          <fileset dir="${FVT.base.dir}/src/jaxwsejb31Singleton/annotationsRef/ejb1/wsfvt/server">
             <include name="*.java" />
          </fileset>
    </copy>
 
    <!-- wsgen -->
        <wsgen genwsdl="true"
               keep="true"
               verbose="true"
               destdir="${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/ejb1"
               resourcedestdir="${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/ejb1"
               sei="jaxwsejb31Singleton.annotationsRef.ejb1.wsfvt.server.Ejb1">
            <classpath>
                <pathelement location="${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/ejb1" />
                <path refid="classpath" />
            </classpath>
        </wsgen>

        <mkdir dir="${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/ejb1/wsdl" />

    <!-- Move the wsdl and xsd  from FVT.build.classes.dir to wsdl directory-->
        <copy todir="${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/ejb1/wsdl">
            <fileset dir="${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/ejb1">
                <include name="*.wsdl" />
                <include name="*.xsd" />
            </fileset>
        </copy>

        <delete file="${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/ejb1/Ejb1Service.wsdl"/>
        <delete file="${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/ejb1/Ejb1Service_schema1.xsd"/>


        <!-- Get the cells config info -->
        <readCellConfig prefix="server1"
                        key="defaultServer"
                        verbose="${verbose.output}" />

    

        <replace file="${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/ejb1/wsdl/Ejb1Service.wsdl"
                 value="http://${server1.hostName}:${server1.WC_defaulthost}/jaxwsejb31Singleton-anno-Ejb1/Ejb1Service">
            <replacefilter token="REPLACE_WITH_ACTUAL_URL" />
        </replace>
        
        
    <!-- create JAR -->
     
        <jar jarfile="${FVT.build.lib.dir}/jaxwsejb31Singleton-anno-Ejb1.jar">
            <fileset dir="${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/ejb1">
                <include name="**/*class" />
                <include name="**/*java" />
            </fileset>
            <zipfileset dir="${FVT.base.dir}/src/jaxwsejb31Singleton/annotationsRef/ejb1/etc/" prefix="META-INF/">
                <include name="ejb-jar.xml" />
            </zipfileset>
            <zipfileset dir="${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/ejb1/wsdl"
                        prefix="META-INF/wsdl">
                <include name="*.wsdl" />
                <include name="*.xsd" />
            </zipfileset>
            <zipfileset dir="${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/ejb2/wsdl"
                        prefix="META-INF/wsdl">
                <include name="*.wsdl" />
                <include name="*.xsd" />
            </zipfileset>
        </jar>
        
    <!-- create  EARs -->
    
        <ear earfile="${FVT.build.installableApps.dir}/jaxwsejb31Singleton-anno-Ejb1.ear"
             appxml="${FVT.base.dir}/src/jaxwsejb31Singleton/annotationsRef/ejb1/etc/application.xml">
            <fileset dir="${FVT.build.lib.dir}">
                <include name="jaxwsejb31Singleton-anno-Ejb1.jar" />
            </fileset>
			<metainf dir="${FVT.base.dir}/src/jaxwsejb31Singleton/annotationsRef/ejb1/etc/">
				<include name="was.policy" />
			</metainf>
        </ear>
     
     
  <!-- building Ejb1Startup.ear -->
  
    <!-- add dependency to classpath --> 
      <path id="ejb1startupclasspath">
        <path refid="classpath"/>
        <dirset dir="${FVT.build.classes.dir}">
           <include name="jaxwsejb31Singleton/annotationsRef/ejb2"/>            
        </dirset>
      </path>


    <!-- get dependency classes from Ejb2AddService.wsdl -->
    <wsimport                 
         wsdl="${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/ejb2/wsdl/Ejb2AddService.wsdl"            
         destdir="${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/ejb1startup"                                 
         verbose="true"                           
         package="jaxwsejb31Singleton.annotationsRef.ejb2.wsfvt.server"  
         keep="true"         
         wsdllocation="/META-INF/wsdl/Ejb2AddService.wsdl" 
         sourcedestdir="${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/ejb1startup"> 
         
    </wsimport>
                  
                                
    <javac compiler="modern" srcdir="${FVT.base.dir}/src/jaxwsejb31Singleton/annotationsRef/ejb1startup"
           destdir="${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/ejb1startup"
           deprecation="${deprecation}"
           debug="${debug}"
           source="${build.tests.with.java.level}"
           target="${build.tests.with.java.level}"
           failonerror="${failonerror}">
      <classpath refid="ejb1startupclasspath"/>  
      <include name="**/server/*.java"/>
    </javac>
        
    
    
    <!-- copy server's source to classes directory for debugging -->
    <copy todir="${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/ejb1startup/jaxwsejb31Singleton/annotationsRef/ejb1startup/wsfvt/server">
          <fileset dir="${FVT.base.dir}/src/jaxwsejb31Singleton/annotationsRef/ejb1startup/wsfvt/server">
             <include name="*.java" />
          </fileset>
    </copy>
 
    <!-- wsgen -->
        <wsgen genwsdl="true"
               keep="true"
               verbose="true"
               destdir="${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/ejb1startup"
               resourcedestdir="${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/ejb1startup"
               sei="jaxwsejb31Singleton.annotationsRef.ejb1startup.wsfvt.server.Ejb1Startup">
            <classpath>
                <pathelement location="${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/ejb1startup" />
                <path refid="classpath" />
            </classpath>
        </wsgen>

        <mkdir dir="${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/ejb1startup/wsdl" />

    <!-- Move the wsdl and xsd  from FVT.build.classes.dir to wsdl directory-->
        <copy todir="${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/ejb1startup/wsdl">
            <fileset dir="${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/ejb1startup">
                <include name="*.wsdl" />
                <include name="*.xsd" />
            </fileset>
        </copy>

        <delete file="${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/ejb1startup/Ejb1StartupService.wsdl"/>
        <delete file="${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/ejb1startup/Ejb1StartupService_schema1.xsd"/>


        <!-- Get the cells config info -->
        <readCellConfig prefix="server1"
                        key="defaultServer"
                        verbose="${verbose.output}" />

    

        <replace file="${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/ejb1startup/wsdl/Ejb1StartupService.wsdl"
                 value="http://${server1.hostName}:${server1.WC_defaulthost}/jaxwsejb31Singleton-anno-Ejb1Startup/Ejb1StartupService">
            <replacefilter token="REPLACE_WITH_ACTUAL_URL" />
        </replace>
        
        
    <!-- create JAR -->
     
        <jar jarfile="${FVT.build.lib.dir}/jaxwsejb31Singleton-anno-Ejb1Startup.jar">
            <fileset dir="${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/ejb1startup">
                <include name="**/*class" />
                <include name="**/*java" />
            </fileset>
            <zipfileset dir="${FVT.base.dir}/src/jaxwsejb31Singleton/annotationsRef/ejb1startup/etc/" prefix="META-INF/">
                <include name="ejb-jar.xml" />
            </zipfileset>
            <zipfileset dir="${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/ejb1startup/wsdl"
                        prefix="META-INF/wsdl">
                <include name="*.wsdl" />
                <include name="*.xsd" />
            </zipfileset>
            <zipfileset dir="${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/ejb2/wsdl"
                        prefix="META-INF/wsdl">
                <include name="*.wsdl" />
                <include name="*.xsd" />
            </zipfileset>
        </jar>
        
    <!-- create  EARs -->
    
        <ear earfile="${FVT.build.installableApps.dir}/jaxwsejb31Singleton-anno-Ejb1Startup.ear"
             appxml="${FVT.base.dir}/src/jaxwsejb31Singleton/annotationsRef/ejb1startup/etc/application.xml">
            <fileset dir="${FVT.build.lib.dir}">
                <include name="jaxwsejb31Singleton-anno-Ejb1Startup.jar" />
            </fileset>
			<metainf dir="${FVT.base.dir}/src/jaxwsejb31Singleton/annotationsRef/ejb1startup/etc/">
				<include name="was.policy" />
			</metainf>
        </ear>

  </target>
    
               
  <!-- The client target will build anything necessary for the client
       piece of the test.  This could just be compiling the client class
       or in the case of a managed client, building a client side EAR
       file.
  -->                               
  <target name="client" depends="setenv">
  
      
  </target>
                            
                            
  <!-- The tesst target will build anything necessary for the test
       piece of the test.  Often this will just include compiling the
       the JUnit test case file.
  -->                               
  <target name="test" depends="setenv, server">
  
     <!-- need  artifacts from wsimport -->
     
    <mkdir dir="${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/wsfvt/test"/>

    <!-- use wsdl from build location ${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/ejb1/wsdl -->
    <wsimport                 
         wsdl="${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/ejb1/wsdl/Ejb1Service.wsdl"            
         destdir="${FVT.build.classes.dir}"                                 
         verbose="true"                           
         package="jaxwsejb31Singleton.annotationsRef.wsfvt.test"  
         keep="true"
         sourcedestdir="${FVT.build.classes.dir}"     
         wsdllocation="http://${server1.hostName}:${server1.WC_defaulthost}/jaxwsejb31Singleton-anno-Ejb1/Ejb1Service?wsdl">
    </wsimport>
    
    
    <!-- use wsdl from build location ${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/ejb1startup/wsdl -->
    <wsimport                 
         wsdl="${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/ejb1startup/wsdl/Ejb1StartupService.wsdl"            
         destdir="${FVT.build.classes.dir}"                                 
         verbose="true"                           
         package="jaxwsejb31Singleton.annotationsRef.wsfvt.test"  
         keep="true"
         sourcedestdir="${FVT.build.classes.dir}"              
         wsdllocation="http://${server1.hostName}:${server1.WC_defaulthost}/jaxwsejb31Singleton-anno-Ejb1/Ejb1Service?wsdl">
    </wsimport>
                  
    <!-- remove the local classes from test directory.  These classes somehow conflict when running the test - don't know why -->
    <delete file="${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/wsfvt/test/DoSum.class"/>    
    <delete file="${FVT.build.classes.dir}/jaxwsejb31Singleton/annotationsRef/wsfvt/test/LastTotalSum.class"/> 

    <javac compiler="modern" srcdir="${FVT.base.dir}/src/jaxwsejb31Singleton/annotationsRef"
           destdir="${FVT.build.classes.dir}"
           deprecation="${deprecation}"
           debug="${debug}"
           source="${build.tests.with.java.level}"
           target="${build.tests.with.java.level}"
           failonerror="${failonerror}">
      <classpath refid="componentClasspath"/>
      <include name="**/test/*.java"/>
    </javac>
      
  </target>         
  
             
  <!-- The preinstall target will perform any tasks necessary before the
       application is installed into WebSphere.  This could include running
       ejbdeploy or endptenabler for an EAR that contains an EJB.
  -->                               
    <!--
		   we only need to run endpoint enabler, no need to run ejbdeploy tool for ejb 3.0+             
		 -->
    <target name="preinstall"
            depends="setenv"
            description=" performs endptenabler for the ear file">
            
        <!--<endpointenable earfile="${FVT.build.installableApps.dir}/jaxwsejb31Singleton-anno-Ejb1.ear" />        
        <endpointenable earfile="${FVT.build.installableApps.dir}/jaxwsejb31Singleton-anno-Ejb1Startup.ear" />
        <endpointenable earfile="${FVT.build.installableApps.dir}/jaxwsejb31Singleton-anno-Ejb2Add.ear" />-->
              
    </target>
  
  <!-- The install target will install the server side piece of the test
       into WebSphere.  This target calls the installTest.xml file for
       the test.
  -->           
  <target name="install" depends="setenv">
    <ant antfile="${FVT.base.dir}/src/jaxwsejb31Singleton/annotationsRef/installTest.xml"
         dir="${FVT.base.dir}/src/jaxwsejb31Singleton/annotationsRef">
      <property name="install.mode" value="${rt.install.mode}"/>
    </ant>
  </target>
  
    
  <!-- The uninstall target will uninstall the server side piece of the test
       from WebSphere.  This target calls the uninstallTest.xml file for
       the test.
  -->           
  <target name="uninstall" depends="setenv">
    <ant antfile="${FVT.base.dir}/src/jaxwsejb31Singleton/annotationsRef/uninstallTest.xml"
         dir="${FVT.base.dir}/src/jaxwsejb31Singleton/annotationsRef">
      <property name="uninstall.mode" value="${rt.uninstall.mode}"/>
    </ant>
  </target>
 
</project>
