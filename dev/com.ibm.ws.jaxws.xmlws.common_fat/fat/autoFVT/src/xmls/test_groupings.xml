<!--
   1.1.1.44, 7/10/12

   Change History:
   Date        UserId         Feature/Defect      Description
   02/11/2009  samerrel       574739              Excluded wssecfvt/autoCC/ from default automation runs
   02/16/2009  btiffany       575391              remove audit and kerberos from basic group of tests
   02/25/2009  jramos         575547              Add java2sec test to groupings
   03/04/2009  btiffany       578313              enable ldap security automatically for core tests , add a core test
   04/07/2009  jramos         584075              Add rapidregression grouping
   04/29/2009  jramos         587446              Modify basic-u-to-z grouping
   05/11/2009  samerrel       589978              Enabled wasintegration.startstop in basic-u-to-z grouping
   05/22/2009  jramos         592239              Temporarily remove failing wssecurity tests from wssecurity grouping
   05/28/2009  samerrel       591964.1            Enable wasintegration.onea2s in basic-u-to-z grouping
   06/01/2009  jramos         594118              Exclude saml tests form basic-u-to-z grouping
   06/01/2009  jramos         594118.1            Exclude saml tests form basic-c-to-t grouping
   07/16/2009  jramos         601809              Include tests that are now passing
   08/25/2009  syed           609212              Define bucket for samlFisFats
   09/16/2009  jramos         612614              Remove excluded tests from basic-u-to-z and wssecurity
   11/10/2009  jramos         626728              Redefine test groupings
   11/23/2009  jtnguyen       629450              Add jaxwsejb31Singleton
   12/14/2009  syed           632329              Update ws-sec test groupings
   01/14/2010  jramos         634023              Move throttle tests to ws.integ2 bucket
   03/04/2010  btiffany       641610              Add jaxws22 grouping to engine bucket
   03/16/2010  syed           F18567-23226        Define bucket for glmFisFats
   03/24/2010  sy             639343              Define bucket ws-audit
   03/26/2010  whsu           645579              Update adminthinclient listServices  grouping
   06/18/2010  jtnguyen       657385              Added faultbean component
   07/16/2010  biffany        F743-31413          Put all jaxwsejb* in integ1 bucket (adds jaxwsejbinwar)
   07/20/2010  btiffany       661398              move engine.rapid tests to engine.daily on z/os only
   08/09/2010  syed           664611              Remove java2sec test from ws-security buckets
   08/10/2010  whsu           664887              adding listservices testcases into admin core group 
   09/27/2010  btiffany       F005479.FVT         add wasintegration/transportheaders to transport bucket   
   10/10/2010  himab		F1149.1-26385       add new wsdeploy test
   10/12/2010  syed           F26346-32632        Added GLM WSS API tests to glmFisFats
   10/29/2010  btiffany       F743-34068          Add jcdi tests to integ1 bucket.
   11/03/2010  btiffany       F743-34250          Add first batch of scoped references test to integ1 bucket
   11/04/2010  whsu           677032              adding serviceref ps v7-8 migration tests
   12/08/2010  btiffany       F743-34262          Move scopedrefs test to integ2
   01/14/2010  whsu           685511              FAT:reorganize/optimize timing of serviceref runtime testcases
   09/15/2011  jtnguyen       716922              Remove contextroot from bucket
   02/22/2012  syed           728744              Add samlWebSSO FAT bucket 
   07/10/2012  syed           736024              Add OAuth20 FAT bucket

-->

<project name="test_groupings">	
  <!-- ............................
       Test grouping definitions
       ............................
  -->
  <property name="java2sec.test" value="wasintegration/java2sec/**"/>
  <property name="wssecurity.core" value="wssecfvt/main/**,wssecfvt/apis/**,wssecfvt/wss11/**,wssecfvt/crl/**,wssecfvt/customtoken/**,wssecfvt/transform/**"/>
  <property name="wssecurity.core.exclude" value="wssecfvt/apis/secconv/**,wssecfvt/apis/secconv13/**"/>
  <property name="wssecurity.core.rapid" value="wssecfvt/basic/**"/>
  <property name="wssecurity.secconv" value="wssecfvt/wssecconv/**,wssecfvt/apis/secconv/**,wssecfvt/apis/secconv13/**"/>
  <property name="wssecurity.wstrust" value="wssecfvt/wstrust/**"/>
  <property name="wssecurity.wspolicy" value="wssecfvt/wspolicy/**,wssecfvt/securitypolicy12/**"/>
  <property name="wssecurity.misc" value="wssecfvt/mtom/**,wssecfvt/soap12/**,wssecfvt/securitydomains/**"/>
  <property name="wssecurity.audit" value="wssecfvt/audit/**"/>
  <property name="wssecurity.glmFisFats" value="wssecfvt/glmFisFats/**,wssecfvt/glmApiFats/**"/>
  <property name="wss.mixedcell" value="wssecfvt/mixedcell/**"/>
  <property name="wssecurity.packaging" value="wssecfvt/**,PolicySet/**,${java2sec.test}"/>
  <!-- <property name="wssecurity" value="wssecfvt/**"/> -->
  <property name="admin.core" value="wasintegration/listservices/**,profileAugmentation/**,wasintegration/throttle7/**,wasintegration/sca/**,wasintegration/targeting/**,wasintegration/adminthinclient/**"/>
  <property name="admin.core.rapid" value="wasintegration/listservices/**"/>
  <property name="admin.policyset" value="policySet*/**,policyset*/**"/>
  <property name="admin.policyset.exclude" value="policysetmixedcell/**,policysetmigration/**"/>
  <property name="admin.Enhancement" value="adminEnhancements/**"/>
<!-- adding admin.Integration grouping-->
  <property name="admin.Integration" value="wasintegration/policySetServiceRef/**"/>
  <property name="admin.packaging" value="adminEnhancements/**,policySet*/**,policyset*/**,profileAugmentation/**,wasintegration/**,${java2sec.test}"/>
  <property name="ws.engine" value="axis2/**,faultbean/**,jaxws/**,jaxws22/**,mtom/**,mtom21/**,soapendpoint/**,soap/**,jaxb/**,saaj/**,saaj13dev/**,stax/**,wsdeploy/**"/>
  <property name="ws.engine.rapid" value="jaxb/types/**,jaxws/dispatch/**,jaxws/proxy/**,jaxws/provider/**,jaxws/exceptions/**"/>
  <property name="ws.engine.exclude" value="${ws.engine.rapid},jaxws/pk92392_contextroot/**"/>
  <property name="ws.transport" value="wasintegration/basicauth/**,wasintegration/cookies/**,wasintegration/httpheader/**,wasintegration/httpprops/**,wasintegration/https/**,wasintegration/inprocess/**,wasintegration/sslproxy/**,wasintegration/synctimeout/**,wasintegration/transportheaders/**"/>
  <property name="ws.integ1" value="annotations/**,managedclients/**,thinclient/**,jaxwsejb*/**,thirdpartyjaxws/**,jcdi/**"/>
  <property name="ws.integ2" value="scopedrefs/**,wasintegration/**"/>
  <property name="ws.integ2.exclude" value="${admin.core},${admin.core.rapid},${ws.transport}"/>
  <property name="ws.packaging" value="${ws.engine},${ws.transport},${ws.integ1},${ws.integ2}"/>
  <property name="ws.mixedcell" value="jaxwsmixedcell/**"/>
  <property name="ws.mixedcell.packaging" value="jaxwsmixedcell/**"/>  
  <property name="mixedcell" value="mixedCell/**,wasintegration/throttle7/ecmbean_mixedcell/**,policysetmixedcell/**"/>
  <property name="mixedcell.packaging" value="mixedCell/**,wasintegration/throttle*/**,policysetmixedcell/**"/>
  <property name="jms" value="jms/**"/>
  <property name="jms.packaging" value="jms/**"/>
  <property name="saml.FisFats" value="samlFisFats/**"/>
  <property name="saml.FisFats.packaging" value="samlFisFats/**"/>
  <property name="migration" value="**migration**/**"/>
  <property name="saml.WebSSO" value="samlwebsso/**"/>
  <property name="saml.WebSSO.packaging" value="samlwebsso/**"/>
  <property name="oauth20" value="oauth20/**"/>
  <property name="oauth20.packaging" value="oauth20/**"/>

  <!--whsu-->
  <property name="migrationV7To8" value="**MigrateV7To8**/**"/>

  <target name="define-all">
    <!-- Set the slice.properties file -->
    <copy overwrite="yes"
          file="${FVT.base.dir}/common/files/slice.properties"
          tofile="${FVT.base.dir}/slice.properties">
      <filterset id="replace.filter.set1">
        <filter token="test.name.value" value="**"/>
        <filter token="excluded.test.name.value" value="**migration**/**,wssecfvt/autoCC/**"/>
        <filter token="not.excluded.value" value="" />
        <filter token="test.name.delimiter.value"  value=","/>
        <filter token="release.filter.value"  value="**"/>
      	<filter token="server.setup.to.run.value" value="setupServer-all"/>
      </filterset>
    </copy>

    <property name="server.setup.target" value="setupServer-all"/>
  </target>

  <target name="setupServerAll">
    <!-- property name="server.setup.target" value="setupServer-all"/ -->
    <property name="server.not.setup" value="true"/>
    <echo message="set server.not.setup to true for setupServer to run. But better remove the semaphoen as well"/>
  </target>

  <target name="define-mixedcell">
    <!-- Set the slice.properties file -->
    <copy overwrite="yes"
          file="${FVT.base.dir}/common/files/slice.properties"
          tofile="${FVT.base.dir}/slice.properties">
      <filterset id="replace.filter.set1">
        <filter token="test.name.value" value="${mixedcell},${java2sec.test}"/>
        <filter token="excluded.test.name.value"  value=""/>
        <filter token="not.excluded.value" value="" />
        <filter token="test.name.delimiter.value"  value=","/>
        <filter token="release.filter.value"  value="**"/>
      	<filter token="server.setup.to.run.value" value="setupServer-basic"/>
      </filterset>
    </copy>
    <echo message="slice.properties file has been updated" />
  </target> 
  
  
  <target name="define-ws-mixedcell">
    <!-- Set the slice.properties file for core team's mixed cell bucket -->
    <copy overwrite="yes"
          file="${FVT.base.dir}/common/files/slice.properties"
          tofile="${FVT.base.dir}/slice.properties">
      <filterset id="replace.filter.set1">
        <filter token="test.name.value" value="${ws.mixedcell},${java2sec.test}"/>
        <filter token="excluded.test.name.value"  value=""/>
        <filter token="not.excluded.value" value="" />
        <filter token="test.name.delimiter.value"  value=","/>
        <filter token="release.filter.value"  value="**"/>
      	<filter token="server.setup.to.run.value" value="setupServer-basic"/>
      </filterset>
    </copy>
    <echo message="slice.properties file has been updated" />
  </target> 
  
  <target name="define-wssecurity-core">
    <!-- Set the slice.properties file -->
    <copy overwrite="yes"
          file="${FVT.base.dir}/common/files/slice.properties"
          tofile="${FVT.base.dir}/slice.properties">
      <filterset id="replace.filter.set1">
        <filter token="test.name.value" value="${wssecurity.core}"/>
        <filter token="excluded.test.name.value"  value="${wssecurity.core.exclude}"/>
        <filter token="not.excluded.value" value="" />        
        <filter token="test.name.delimiter.value"  value=","/>
        <filter token="release.filter.value"  value="**"/>
      	<filter token="server.setup.to.run.value" value="setupServer-basic"/>
      </filterset>
    </copy>

    <property name="server.setup.target" value="setupServer-basic"/>
    <echo message="slice.properties file has been updated" />
  </target>

  <target name="define-wssecurity-core-rapid">
    <!-- Set the slice.properties file -->
    <copy overwrite="yes"
          file="${FVT.base.dir}/common/files/slice.properties"
          tofile="${FVT.base.dir}/slice.properties">
      <filterset id="replace.filter.set1">
        <filter token="test.name.value" value="${wssecurity.core.rapid}"/>
        <filter token="excluded.test.name.value"  value=""/>
        <filter token="not.excluded.value" value="" />        
        <filter token="test.name.delimiter.value"  value=","/>
        <filter token="release.filter.value"  value="**"/>
      	<filter token="server.setup.to.run.value" value="setupServer-basic"/>
      </filterset>
    </copy>

    <property name="server.setup.target" value="setupServer-basic"/>
    <echo message="slice.properties file has been updated" />
  </target>
	
  <target name="define-wssecurity-secconv">
    <!-- Set the slice.properties file -->
    <copy overwrite="yes"
          file="${FVT.base.dir}/common/files/slice.properties"
          tofile="${FVT.base.dir}/slice.properties">
      <filterset id="replace.filter.set1">
        <filter token="test.name.value" value="${wssecurity.secconv}"/>
        <filter token="excluded.test.name.value"  value=""/>
        <filter token="not.excluded.value" value="" />        
        <filter token="test.name.delimiter.value"  value=","/>
        <filter token="release.filter.value"  value="**"/>
      	<filter token="server.setup.to.run.value" value="setupServer-basic"/>
      </filterset>
    </copy>

    <property name="server.setup.target" value="setupServer-basic"/>
    <echo message="slice.properties file has been updated" />
  </target>

  <target name="define-wssecurity-wstrust">
    <!-- Set the slice.properties file -->
    <copy overwrite="yes"
          file="${FVT.base.dir}/common/files/slice.properties"
          tofile="${FVT.base.dir}/slice.properties">
      <filterset id="replace.filter.set1">
        <filter token="test.name.value" value="${wssecurity.wstrust}"/>
        <filter token="excluded.test.name.value"  value=""/>
        <filter token="not.excluded.value" value="" />        
        <filter token="test.name.delimiter.value"  value=","/>
        <filter token="release.filter.value"  value="**"/>
      	<filter token="server.setup.to.run.value" value="setupServer-basic"/>
      </filterset>
    </copy>

    <property name="server.setup.target" value="setupServer-basic"/>
    <echo message="slice.properties file has been updated" />
  </target>
	
  <target name="define-wssecurity-wspolicy">
    <!-- Set the slice.properties file -->
    <copy overwrite="yes"
          file="${FVT.base.dir}/common/files/slice.properties"
          tofile="${FVT.base.dir}/slice.properties">
      <filterset id="replace.filter.set1">
        <filter token="test.name.value" value="${wssecurity.wspolicy}"/>
        <filter token="excluded.test.name.value"  value=""/>
        <filter token="not.excluded.value" value="" />        
        <filter token="test.name.delimiter.value"  value=","/>
        <filter token="release.filter.value"  value="**"/>
      	<filter token="server.setup.to.run.value" value="setupServer-basic"/>
      </filterset>
    </copy>

    <property name="server.setup.target" value="setupServer-basic"/>
    <echo message="slice.properties file has been updated" />
  </target>
	
  <target name="define-wssecurity-misc">
    <!-- Set the slice.properties file -->
    <copy overwrite="yes"
          file="${FVT.base.dir}/common/files/slice.properties"
          tofile="${FVT.base.dir}/slice.properties">
      <filterset id="replace.filter.set1">
        <filter token="test.name.value" value="${wssecurity.misc}"/>
        <filter token="excluded.test.name.value"  value=""/>
        <filter token="not.excluded.value" value="" />        
        <filter token="test.name.delimiter.value"  value=","/>
        <filter token="release.filter.value"  value="**"/>
      	<filter token="server.setup.to.run.value" value="setupServer-basic"/>
      </filterset>
    </copy>

    <property name="server.setup.target" value="setupServer-basic"/>
    <echo message="slice.properties file has been updated" />
  </target>

  <target name="define-wssecurity-audit">
    <!-- Set the slice.properties file -->
    <copy overwrite="yes"
          file="${FVT.base.dir}/common/files/slice.properties"
          tofile="${FVT.base.dir}/slice.properties">
      <filterset id="replace.filter.set1">
        <filter token="test.name.value" value="${wssecurity.audit}"/>
        <filter token="excluded.test.name.value"  value=""/>
        <filter token="not.excluded.value" value="" />
        <filter token="test.name.delimiter.value"  value=","/>
        <filter token="release.filter.value"  value="**"/>
        <filter token="server.setup.to.run.value" value="setupServer-basic"/>
      </filterset>
    </copy>

    <property name="server.setup.target" value="setupServer-basic"/>
    <echo message="slice.properties file has been updated" />
  </target>


  <target name="define-wssecurity-glmFisFats">
    <!-- Set the slice.properties file -->
    <copy overwrite="yes"
          file="${FVT.base.dir}/common/files/slice.properties"
          tofile="${FVT.base.dir}/slice.properties">
      <filterset id="replace.filter.set1">
        <filter token="test.name.value" value="${wssecurity.glmFisFats}"/>
        <filter token="excluded.test.name.value"  value=""/>
        <filter token="not.excluded.value" value="" />        
        <filter token="test.name.delimiter.value"  value=","/>
        <filter token="release.filter.value"  value="**"/>
      	<filter token="server.setup.to.run.value" value="setupServer-basic"/>
      </filterset>
    </copy>

    <property name="server.setup.target" value="setupServer-basic"/>
    <echo message="slice.properties file has been updated" />
  </target>

  <target name="define-wss-mixedcell">
    <!-- Set the slice.properties file -->
    <copy overwrite="yes"
          file="${FVT.base.dir}/common/files/slice.properties"
          tofile="${FVT.base.dir}/slice.properties">
      <filterset id="replace.filter.set1">
        <filter token="test.name.value" value="${wss.mixedcell}"/>
        <filter token="excluded.test.name.value"  value=""/>
        <filter token="not.excluded.value" value="" />        
        <filter token="test.name.delimiter.value"  value=","/>
        <filter token="release.filter.value"  value="**"/>
      	<filter token="server.setup.to.run.value" value="setupServer-basic"/>
      </filterset>
    </copy>

    <property name="server.setup.target" value="setupServer-basic"/>
    <echo message="slice.properties file has been updated" />
  </target>

<!--
  <target name="define-wssecurity">
    Set the slice.properties file
    <copy overwrite="yes"
          file="${FVT.base.dir}/common/files/slice.properties"
          tofile="${FVT.base.dir}/slice.properties">
      <filterset id="replace.filter.set1">
        <filter token="test.name.value" value="${wssecurity}"/>
        <filter token="excluded.test.name.value"  value="wssecfvt/autoCC/**,wssecfvt/hwcrypto/**,wssecfvt/kerberos/**,wssecfvt/spnego/**"/>
        <filter token="not.excluded.value" value="" />        
        <filter token="test.name.delimiter.value"  value=","/>
        <filter token="release.filter.value"  value="**"/>
      	<filter token="server.setup.to.run.value" value="setupServer-basic"/>
      </filterset>
    </copy>

    <property name="server.setup.target" value="setupServer-basic"/>
    <echo message="slice.properties file has been updated" />

  </target>
-->
	
  <target name="define-admin-core">
    <!-- Set the slice.properties file -->
    <copy overwrite="yes"
          file="${FVT.base.dir}/common/files/slice.properties"
          tofile="${FVT.base.dir}/slice.properties">
      <filterset id="replace.filter.set1">
        <filter token="test.name.value" value="${admin.core},${java2sec.test}"/>
        <filter token="excluded.test.name.value"  value=""/>
        <filter token="not.excluded.value" value="" />        
        <filter token="test.name.delimiter.value"  value=","/>
        <filter token="release.filter.value"  value="**"/>
      	<filter token="server.setup.to.run.value" value="setupServer-basic"/>
      </filterset>
    </copy>

    <property name="server.setup.target" value="setupServer-basic"/>
    <echo message="slice.properties file has been updated" />
  </target>
	
  <target name="define-admin-core-rapid">
    <!-- Set the slice.properties file -->
    <copy overwrite="yes"
          file="${FVT.base.dir}/common/files/slice.properties"
          tofile="${FVT.base.dir}/slice.properties">
      <filterset id="replace.filter.set1">
        <filter token="test.name.value" value="${admin.core.rapid},${java2sec.test}"/>
        <filter token="excluded.test.name.value"  value=""/>
        <filter token="not.excluded.value" value="" />        
        <filter token="test.name.delimiter.value"  value=","/>
        <filter token="release.filter.value"  value="**"/>
      	<filter token="server.setup.to.run.value" value="setupServer-basic"/>
      </filterset>
    </copy>

    <property name="server.setup.target" value="setupServer-basic"/>
    <echo message="slice.properties file has been updated" />
  </target>
	
  <target name="define-admin-policyset">
    <!-- Set the slice.properties file -->
    <copy overwrite="yes"
          file="${FVT.base.dir}/common/files/slice.properties"
          tofile="${FVT.base.dir}/slice.properties">
      <filterset id="replace.filter.set1">
        <filter token="test.name.value" value="${admin.policyset},${java2sec.test}"/>
        <filter token="excluded.test.name.value"  value="${admin.policyset.exclude}"/>
        <filter token="not.excluded.value" value="" />        
        <filter token="test.name.delimiter.value"  value=","/>
        <filter token="release.filter.value"  value="**"/>
      	<filter token="server.setup.to.run.value" value="setupServer-basic"/>
      </filterset>
    </copy>

    <property name="server.setup.target" value="setupServer-basic"/>
    <echo message="slice.properties file has been updated" />
  </target>
	
  <target name="define-admin-Enhancement">
    <!-- Set the slice.properties file -->
    <copy overwrite="yes"
          file="${FVT.base.dir}/common/files/slice.properties"
          tofile="${FVT.base.dir}/slice.properties">
      <filterset id="replace.filter.set1">
        <filter token="test.name.value" value="${admin.Enhancement},${java2sec.test}"/>
        <filter token="excluded.test.name.value"  value=""/>
        <filter token="not.excluded.value" value="" />        
        <filter token="test.name.delimiter.value"  value=","/>
        <filter token="release.filter.value"  value="**"/>
      	<filter token="server.setup.to.run.value" value="setupServer-basic"/>
      </filterset>
    </copy>

    <property name="server.setup.target" value="setupServer-basic"/>
    <echo message="slice.properties file has been updated" />
  </target>

  <target name="define-admin-Integration">
    <!-- Set the slice.properties file -->
    <copy overwrite="yes"
          file="${FVT.base.dir}/common/files/slice.properties"
          tofile="${FVT.base.dir}/slice.properties">
      <filterset id="replace.filter.set1">
        <filter token="test.name.value" value="${admin.Integration}"/>
        <filter token="excluded.test.name.value"  value=""/>
        <filter token="not.excluded.value" value="" />        
        <filter token="test.name.delimiter.value"  value=","/>
        <filter token="release.filter.value"  value="**"/>
      	<filter token="server.setup.to.run.value" value="setupServer-basic"/>
      </filterset>
    </copy>
    <property name="server.setup.target" value="setupServer-basic"/>
    <echo message="slice.properties file has been updated" />
  </target>




	
  <target name="define-ws-engine">
    <!-- Set the slice.properties file -->
    <copy overwrite="yes"
          file="${FVT.base.dir}/common/files/slice.properties"
          tofile="${FVT.base.dir}/slice.properties">
      <filterset id="replace.filter.set1">
        <filter token="test.name.value" value="${ws.engine},${java2sec.test}"/>
        <filter token="excluded.test.name.value"  value="${ws.engine.exclude}"/>
        <filter token="not.excluded.value" value="" />        
        <filter token="test.name.delimiter.value"  value=","/>
        <filter token="release.filter.value"  value="**"/>
      	<filter token="server.setup.to.run.value" value="setupServer-basic"/>
      </filterset>
    </copy>

    <property name="server.setup.target" value="setupServer-basic"/>
    <echo message="slice.properties file has been updated" />
  </target>

  <!-- 661398 on z/os only, don't run rapid regr. due to hardware shortage.  Put the rapid tests in daily -->  
  <target name="define-ws-engine-zos">
    <!-- Set the slice.properties file -->
    <copy overwrite="yes"
          file="${FVT.base.dir}/common/files/slice.properties"
          tofile="${FVT.base.dir}/slice.properties">
      <filterset id="replace.filter.set1">
        <filter token="test.name.value" value="${ws.engine},${ws.engine.rapid},${java2sec.test}"/>
        <filter token="excluded.test.name.value"  value=""/>
        <filter token="not.excluded.value" value="" />        
        <filter token="test.name.delimiter.value"  value=","/>
        <filter token="release.filter.value"  value="**"/>
      	<filter token="server.setup.to.run.value" value="setupServer-basic"/>
      </filterset>
    </copy>

    <property name="server.setup.target" value="setupServer-basic"/>
    <echo message="slice.properties file has been updated" />
  </target>
	
  <target name="define-ws-engine-rapid">
    <!-- Set the slice.properties file -->
    <copy overwrite="yes"
          file="${FVT.base.dir}/common/files/slice.properties"
          tofile="${FVT.base.dir}/slice.properties">
      <filterset id="replace.filter.set1">
        <filter token="test.name.value" value="${ws.engine.rapid},${java2sec.test}"/>
        <filter token="excluded.test.name.value"  value=""/>
        <filter token="not.excluded.value" value="" />        
        <filter token="test.name.delimiter.value"  value=","/>
        <filter token="release.filter.value"  value="**"/>
      	<filter token="server.setup.to.run.value" value="setupServer-basic"/>
      </filterset>
    </copy>

    <property name="server.setup.target" value="setupServer-basic"/>
    <echo message="slice.properties file has been updated" />
  </target>
		
  <target name="define-ws-transport">
    <!-- Set the slice.properties file -->
    <copy overwrite="yes"
          file="${FVT.base.dir}/common/files/slice.properties"
          tofile="${FVT.base.dir}/slice.properties">
      <filterset id="replace.filter.set1">
        <filter token="test.name.value" value="${ws.transport},${java2sec.test}"/>
        <filter token="excluded.test.name.value"  value=""/>
        <filter token="not.excluded.value" value="" />        
        <filter token="test.name.delimiter.value"  value=","/>
        <filter token="release.filter.value"  value="**"/>
      	<filter token="server.setup.to.run.value" value="setupServer-basic"/>
      </filterset>
    </copy>

    <property name="server.setup.target" value="setupServer-basic"/>
    <echo message="slice.properties file has been updated" />
  </target>
	
  <target name="define-ws-integ1">
    <!-- Set the slice.properties file -->
    <copy overwrite="yes"
          file="${FVT.base.dir}/common/files/slice.properties"
          tofile="${FVT.base.dir}/slice.properties">
      <filterset id="replace.filter.set1">
        <filter token="test.name.value" value="${ws.integ1},${java2sec.test}"/>
        <filter token="excluded.test.name.value"  value=""/>
        <filter token="not.excluded.value" value="" />        
        <filter token="test.name.delimiter.value"  value=","/>
        <filter token="release.filter.value"  value="**"/>
      	<filter token="server.setup.to.run.value" value="setupServer-basic"/>
      </filterset>
    </copy>

    <property name="server.setup.target" value="setupServer-basic"/>
    <echo message="slice.properties file has been updated" />
  </target>
	
  <target name="define-ws-integ2">
    <!-- Set the slice.properties file -->
    <copy overwrite="yes"
          file="${FVT.base.dir}/common/files/slice.properties"
          tofile="${FVT.base.dir}/slice.properties">
      <filterset id="replace.filter.set1">
        <filter token="test.name.value" value="${ws.integ2},${java2sec.test}"/>
        <filter token="excluded.test.name.value"  value="${ws.integ2.exclude}"/>
        <filter token="not.excluded.value" value="" />        
        <filter token="test.name.delimiter.value"  value=","/>
        <filter token="release.filter.value"  value="**"/>
      	<filter token="server.setup.to.run.value" value="setupServer-basic"/>
      </filterset>
    </copy>

    <property name="server.setup.target" value="setupServer-basic"/>
    <echo message="slice.properties file has been updated" />
  </target>

  <target name="define-jms">
    <!-- Set the slice.properties file -->
    <copy overwrite="yes"
          file="${FVT.base.dir}/common/files/slice.properties"
          tofile="${FVT.base.dir}/slice.properties">
      <filterset id="replace.filter.set1">
        <filter token="test.name.value" value="${jms},${java2sec.test}"/>
        <filter token="excluded.test.name.value"  value=""/>
        <filter token="not.excluded.value" value="" />        
        <filter token="test.name.delimiter.value"  value=","/>
        <filter token="release.filter.value"  value="**"/>
      	<filter token="server.setup.to.run.value" value="setupServer-all"/>
      </filterset>
    </copy>

    <property name="server.setup.target" value="setupServer-jms"/>
    <echo message="slice.properties file has been updated" />
  </target>

  <target name="define-samlFisFats">
    <!-- Set the slice.properties file -->
    <copy overwrite="yes"
          file="${FVT.base.dir}/common/files/slice.properties"
          tofile="${FVT.base.dir}/slice.properties">
      <filterset id="replace.filter.set1">
        <filter token="test.name.value" value="${saml.FisFats},${java2sec.test}"/>
        <filter token="excluded.test.name.value"  value=""/>
        <filter token="test.name.delimiter.value"  value=","/>
        <filter token="not.excluded.value" value="" />        
        <filter token="release.filter.value"  value="**"/>
      	<filter token="server.setup.to.run.value" value="setupServer-basic"/>
      </filterset>
    </copy>

    <property name="server.setup.target" value="setupServer-basic"/>
    <echo message="slice.properties file has been updated" />
  </target>
			
  <target name="define-migration">
    <!-- Set the slice.properties file -->
    <copy overwrite="yes"
          file="${FVT.base.dir}/common/files/slice.properties"
          tofile="${FVT.base.dir}/slice.properties">
      <filterset id="replace.filter.set1">
        <filter token="test.name.value" value="${migration}"/>
        <filter token="excluded.test.name.value"  value=""/>
        <filter token="not.excluded.value" value="" />
        <filter token="test.name.delimiter.value"  value=","/>
        <filter token="release.filter.value"  value="**"/>
      	<filter token="server.setup.to.run.value" value="setupServer-basic"/>
      </filterset>
    </copy>

    <property name="server.setup.target" value="setupServer-basic"/>
    <echo message="slice.properties file has been updated" />

  </target>


  <!-- whsu -->
  <target name="define-migrationV7To8">
    <!-- Set the slice.properties file -->
    <copy overwrite="yes"
          file="${FVT.base.dir}/common/files/slice.properties"
          tofile="${FVT.base.dir}/slice.properties">
      <filterset id="replace.filter.set1">
        <filter token="test.name.value" value="${migrationV7To8}"/>
        <filter token="excluded.test.name.value"  value=""/>
        <filter token="not.excluded.value" value="" />
        <filter token="test.name.delimiter.value"  value=","/>
        <filter token="release.filter.value"  value="**"/>
      	<filter token="server.setup.to.run.value" value="setupServer-basic"/>
      </filterset>
    </copy>

    <property name="server.setup.target" value="setupServer-basic"/>
    <echo message="slice.properties file has been updated" />
  </target>

  <target name="define-samlWebSSO">
    <!-- Set the slice.properties file -->
    <copy overwrite="yes"
          file="${FVT.base.dir}/common/files/slice.properties"
          tofile="${FVT.base.dir}/slice.properties">
      <filterset id="replace.filter.set1">
        <filter token="test.name.value" value="${saml.WebSSO}"/>
        <filter token="excluded.test.name.value"  value=""/>
        <filter token="test.name.delimiter.value"  value=","/>
        <filter token="not.excluded.value" value="" />        
        <filter token="release.filter.value"  value="**"/>
      	<filter token="server.setup.to.run.value" value="setupServer-basic"/>
      </filterset>
    </copy>

    <property name="server.setup.target" value="setupServer-basic"/>
    <echo message="slice.properties file has been updated" />
  </target>

  <target name="define-OAuth20">
    <!-- Set the slice.properties file -->
    <copy overwrite="yes"
          file="${FVT.base.dir}/common/files/slice.properties"
          tofile="${FVT.base.dir}/slice.properties">
      <filterset id="replace.filter.set1">
        <filter token="test.name.value" value="${oauth20}"/>
        <filter token="excluded.test.name.value"  value=""/>
        <filter token="test.name.delimiter.value"  value=","/>
        <filter token="not.excluded.value" value="" />        
        <filter token="release.filter.value"  value="**"/>
      	<filter token="server.setup.to.run.value" value="setupServer-basic"/>
      </filterset>
    </copy>

    <property name="server.setup.target" value="setupServer-basic"/>
    <echo message="slice.properties file has been updated" />
  </target>

</project>
