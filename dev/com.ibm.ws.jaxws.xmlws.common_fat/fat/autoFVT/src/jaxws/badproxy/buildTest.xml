<?xml version="1.0" encoding="UTF-8"?>

<!-- 
  @(#) 1.15 autoFVT/src/jaxws/badproxy/buildTest.xml, WAS.websvcs.fvt, WAS70.FVT, r0834.51 11/28/07 15:34:22 [9/3/08 21:35:36]

  Description: Build file for the JAX-WS BadProxy tests
 
  Date        Author       Feature/Defect          Description
  09/27/06    sedov        LIDB3296.41-02          New File
  11/04/06    sedov        D403119                 Update to use readCellConfig
  01/30/07    sedov        D417716                 Added new tests
  04/30/07    sedov        D433811.1               Added debug flag to javac
  05/01/07    sedov        D436197                 Added was.policy to logger
  07/31/07    ulbricht     D455649                 Change jar names
  08/06/07    ulbricht     D439706                 Change admin client name
  11/28/07    sedov        D486125                 Extract classpath to path_refs
-->

<project basedir="." default="buildall" name="jaxws_badproxy">

	<property name="componentName" value="jaxws/badproxy"/>
	<property name="test.name" value="jaxws.badproxy" />
	
    <import file="..\jaxws-commons.xml" />
    <import file="macros.xml" />

	<property name="test.base.dir" value="${FVT.base.dir}/src/${componentName}" />
	<property name="test.work.dir" value="${FVT.build.work.dir}/${test.name}" />
		
	<path id="componentClasspath">
	   <path refid="adminclientclasspath"/>
	</path>		

	<property name="base-test-package" value="jaxws.badproxy.wsfvt" />
   	<property name="base-test-name" value="jaxws.badproxy" />
	<property name="base-test-dir" value="jaxws/badproxy/wsfvt" />
	<property name="base-test-namespace" value="wsfvt.badproxy.jaxws" />	
		
	<target name="buildall" depends="clean, init, server, client, test" /> 
  
	<target name="clean" depends="setenv">
		<echo message="${test.name} Cleaning..." />
		
		<delete quiet="true">
			<fileset dir="${FVT.build.installableApps.dir}" includes="${test.name}*App.ear" />
			<fileset dir="${FVT.build.lib.dir}" includes="${test.name}*.war" />
		</delete>
		
		<delete dir="${FVT.build.work.dir}/${test.name}" />
		<delete dir="${FVT.build.classes.dir}/${componentName}" />
		
	</target>
	
	<target name="init" depends="setenv">
		<echo message="${test.name} Initializing..." />
		<mkdir dir="${FVT.build.work.dir}/${test.name}"/>
	</target>
	
	<target name="server" depends="setenv">
		<echo message="${test.name} Building Server..." />
		
		<readCellConfig prefix="server1" key="defaultServer" />
		
		<propertyReplace property="wsdl_location"
			value="${test.work.dir}"
			replace-what="\" replace-with="/"/>
		
		<propertyReplace property="profile_dir"
			value="${server1.profileDir}"
			replace-what="\" replace-with="/"/>				
		
		<!-- copy server/TestCase files -->
		<copy todir="${test.work.dir}" overwrite="yes">
			<fileset dir="${FVT.base.dir}/src/${componentName}/etc">
				<include name="was.policy" />
			</fileset>
		
			<fileset dir="${FVT.base.dir}/src">
				<include name="${componentName}/**/server/**/*.java" />
				<include name="${componentName}/**/common/**/*.java" />				
			</fileset>
			
			<filterset>
				<filter token="SEC_USERNAME" value="${dist.security.user.name}" />
				<filter token="SEC_PASSWORD" value="${dist.security.password}" />
				<filter token="SEC_ENABLED"	 value="${enable.security}" />

				<filter token="HOST" value="${server1.hostName}" />
				<filter token="PORT" value="${server1.WC_defaulthost}" />
				
				<filter token="SERVER_NAME" value="${server1.serverName}" />	
				<filter token="PROFILE_DIR" value="${profile_dir}" />				
				<filter token="WSDL_LOCATION" value="${test.work.dir}" />
			</filterset>			
		</copy>	
		
		<!-- build server/common files -->
		
        <javac compiler="modern"
            fork="true"
            debug="${debug}"
            srcdir="${test.work.dir}"
            destdir="${FVT.build.classes.dir}"
            source="${build.tests.with.java.level}"
            target="${build.tests.with.java.level}"
            includes="**/common/**/*.java, **/server/LogViewerPortImpl.java">
            <classpath>
	            <path refid="componentClasspath"/>
       	    </classpath>
        </javac>
		
		<!-- package wars/ears -->
		<antcall target="createServerEar" />
		
	</target>

	<target name="client" />
	
	<target name="test">	
		<echo message="${test.name} Building Test..." />
		
		<readCellConfig prefix="server1" key="defaultServer" />
		
		<propertyReplace property="ssl_cert_path"
			value="${server1.profileDir}/etc"
			replace-what="\" replace-with="/"/>		
		
		<!-- copy server/TestCase files -->
		<copy todir="${test.work.dir}" overwrite="yes">
			<fileset dir="${test.base.dir}/etc">
				<include name="Provider*.wsdl" />				
			</fileset>
		
			<fileset dir="${FVT.base.dir}/src">
				<include name="${componentName}/**/test/**/*.java" />
				<include name="${componentName}/**/common/**/*.java" />				
			</fileset>
			
			<filterset>
				<filter token="SEC_USERNAME" value="${server1.wasUserName}" />
				<filter token="SEC_PASSWORD" value="${server1.wasPassword}" />
				<filter token="SEC_ENABLED"	 value="${server1.isSecurityEnabled}" />				
				<filter token="SEC_SSL_CERT_PATH"	value="${ssl_cert_path}" />				
				
				<filter token="SERVER_NAME"	value="${server1.serverName}" />								
				<filter token="HOST" value="${server1.hostName}" />
				<filter token="HTTP_PORT" value="${server1.WC_defaulthost}" />
				<filter token="SOAP_PORT" value="${server1.SOAP_CONNECTOR_ADDRESS}" />					
				
				<filter token="WSDL_LOCATION" value="${wsdl_location}" />			
			</filterset>			
		</copy>	

		<property name="base-address" value="http://${server1.hostName}:${server1.WC_defaulthost}/${base-test-name}" />	
		
		<!-- compile the wsdls  -->
		<wsimport-with-wsdlloc test-name="MismatchedWsdl" src-xml-dir="${test.base.dir}/etc" dst-xml-dir="${test.work.dir}" base-address="${base-address}"/>
		<wsimport-with-wsdlloc test-name="MismatchedSEI"  src-xml-dir="${test.base.dir}/etc" dst-xml-dir="${test.work.dir}" base-address="${base-address}"/>
		<wsimport-with-wsdlloc test-name="MismatchedSOAP11"  src-xml-dir="${test.base.dir}/etc" dst-xml-dir="${test.work.dir}" base-address="${base-address}"/>
		<wsimport-with-wsdlloc test-name="MismatchedSOAP12"  src-xml-dir="${test.base.dir}/etc" dst-xml-dir="${test.work.dir}" base-address="${base-address}"/>
		<wsimport-with-wsdlloc test-name="NoWsdlSOAP11"  src-xml-dir="${test.base.dir}/etc" dst-xml-dir="${test.work.dir}" base-address="${base-address}"/>
		<wsimport-noWsdlLoc test-name="NoWsdlSOAP12"  src-xml-dir="${test.base.dir}/etc" dst-xml-dir="${test.work.dir}" base-address="${base-address}"/>

		<wsimport-with-wsdlloc test-name="NoBTSoap12"  src-xml-dir="${test.base.dir}/etc" dst-xml-dir="${test.work.dir}" base-address="${base-address}"/>
		<wsimport-with-wsdlloc test-name="MTOMSoap12"  src-xml-dir="${test.base.dir}/etc" dst-xml-dir="${test.work.dir}" base-address="${base-address}"/>
		<wsimport-with-wsdlloc test-name="AsyncMethods"  src-xml-dir="${test.base.dir}/etc" dst-xml-dir="${test.work.dir}" base-address="${base-address}"/>
		
		<!-- build test/common files -->
        <javac compiler="modern"
            fork="true"
            debug="${debug}"
            srcdir="${test.work.dir}"
            destdir="${FVT.build.classes.dir}"
			source="${build.tests.with.java.level}"
			target="${build.tests.with.java.level}"
            includes="**/test/**/*.java,**/common/**/*.java">
            <classpath refid="componentClasspath"/>
        </javac>		
	</target>
	
	
    <target name="createServerEar">
		<echo message="${test.name} Building server EAR..." />
    	
    	<antcall target="build_logger" />
    	
		<!-- create a separate war for each negative proxy test -->
		<ear-with-wsimport 
		    	test-name="MismatchedWsdl"
				base-test-dir="${base-test-dir}"
			    base-test-name="${base-test-name}"
			    base-test-namespace="${base-test-namespace}"
    	 		base-test-package="${base-test-package}"
				src-xml-dir="${test.base.dir}/etc"
				dst-xml-dir="${test.work.dir}">
				<extra-class-filters>
					<exclude name="${componentName}/**/common/**/*Service.java" />
					<exclude name="${componentName}/**/common/**/*Port.java" />
				</extra-class-filters>
		</ear-with-wsimport>
    	
		<!-- create a separate war for each negative proxy test -->
		<ear-with-wsimport 
		    	test-name="MismatchedSEI"
				base-test-dir="${base-test-dir}"
			    base-test-name="${base-test-name}"
			    base-test-namespace="${base-test-namespace}"
    	 		base-test-package="${base-test-package}"
				src-xml-dir="${test.base.dir}/etc"
				dst-xml-dir="${test.work.dir}">
				<extra-class-filters>
					<exclude name="${componentName}/**/common/**/*Service.java" />
				</extra-class-filters>				
		</ear-with-wsimport>    	
    	
		<!-- create a separate war for each negative proxy test -->
		<ear-with-wsimport 
		    	test-name="MismatchedSOAP11"
				base-test-dir="${base-test-dir}"
			    base-test-name="${base-test-name}"
			    base-test-namespace="${base-test-namespace}"
    	 		base-test-package="${base-test-package}"
				src-xml-dir="${test.base.dir}/etc"
				dst-xml-dir="${test.work.dir}">		
		</ear-with-wsimport>
    	
		<!-- create a separate war for each negative proxy test -->
		<ear-with-wsimport 
		    	test-name="MismatchedSOAP12"
				base-test-dir="${base-test-dir}"
			    base-test-name="${base-test-name}"
			    base-test-namespace="${base-test-namespace}"
    	 		base-test-package="${base-test-package}"
				src-xml-dir="${test.base.dir}/etc"
				dst-xml-dir="${test.work.dir}">		
		</ear-with-wsimport>    	
    	   	
		<!-- create a separate war for each negative proxy test -->
		<ear-with-wsimport 
		    	test-name="NoWsdlSOAP11"
				base-test-dir="${base-test-dir}"
			    base-test-name="${base-test-name}"
			    base-test-namespace="${base-test-namespace}"
    	 		base-test-package="${base-test-package}"
				src-xml-dir="${test.base.dir}/etc"
				dst-xml-dir="${test.work.dir}">
				<webinf-wsdl-includes>
					<exclude name="*.wsdl" />
				</webinf-wsdl-includes>		
		</ear-with-wsimport>      	   	
    	
		<!-- create a separate war for each negative proxy test -->
		<ear-with-wsimport 
		    	test-name="NoWsdlSOAP12"
				base-test-dir="${base-test-dir}"
			    base-test-name="${base-test-name}"
			    base-test-namespace="${base-test-namespace}"
    	 		base-test-package="${base-test-package}"
				src-xml-dir="${test.base.dir}/etc"
				dst-xml-dir="${test.work.dir}">
				<webinf-wsdl-includes>
					<exclude name="*.wsdl" />
				</webinf-wsdl-includes>					
		</ear-with-wsimport>      	
    	
		<!-- create a separate war for each negative proxy test -->
		<ear-with-wsimport 
		    	test-name="NoBTSoap12"
				base-test-dir="${base-test-dir}"
			    base-test-name="${base-test-name}"
			    base-test-namespace="${base-test-namespace}"
    	 		base-test-package="${base-test-package}"
				src-xml-dir="${test.base.dir}/etc"
				dst-xml-dir="${test.work.dir}">
				<webinf-wsdl-includes>
					<include name="*.wsdl" />
				</webinf-wsdl-includes>						
		</ear-with-wsimport>
			
		<!-- create a separate war for each negative proxy test -->
		<ear-with-wsimport 
		    	test-name="MTOMSoap12"
				base-test-dir="${base-test-dir}"
			    base-test-name="${base-test-name}"
			    base-test-namespace="${base-test-namespace}"
    	 		base-test-package="${base-test-package}"
				src-xml-dir="${test.base.dir}/etc"
				dst-xml-dir="${test.work.dir}">
				<webinf-wsdl-includes>
					<include name="*.wsdl" />
				</webinf-wsdl-includes>						
		</ear-with-wsimport>			
    	
		<!-- create a separate war for each negative proxy test -->
		<!--ear-with-wsimport 
		    	test-name="NoWsdlHTTP"
				base-test-dir="${base-test-dir}"
			    base-test-name="${base-test-name}"
			    base-test-namespace="${base-test-namespace}"
    	 		base-test-package="${base-test-package}"
				src-xml-dir="${test.base.dir}/etc"
				dst-xml-dir="${test.work.dir}">
				<webinf-wsdl-includes>
					<exclude name="*.wsdl" />
				</webinf-wsdl-includes>						
		</ear-with-wsimport-->
    	
		<!-- create a separate war for each negative proxy test -->
		<ear-with-wsimport 
		    	test-name="AsyncMethods"
				base-test-dir="${base-test-dir}"
			    base-test-name="${base-test-name}"
			    base-test-namespace="${base-test-namespace}"
    	 		base-test-package="${base-test-package}"
				src-xml-dir="${test.base.dir}/etc"
				dst-xml-dir="${test.work.dir}">
				<webinf-wsdl-includes>
					<include name="*.wsdl" />
				</webinf-wsdl-includes>		
				<wsimport-bindings>
					<binding dir="${test.work.dir}/AsyncMethods" includes="AsyncMethods.xml"/>
				</wsimport-bindings>
		</ear-with-wsimport> 
    	
    </target>
    
	<target name="build_logger">
	
		<!-- copy server/TestCase files -->
		<copy todir="${test.work.dir}" overwrite="yes">
		
			<fileset dir="${test.base.dir}/etc">
				<include name="web.xml" />
				<include name="application.xml" />
			</fileset>
		</copy>
	
		<!-- create a WAR file for regular tests  -->
		<war destfile="${FVT.build.lib.dir}/jaxws.badproxy.logger.war"
			  webxml="${FVT.build.work.dir}/${test.name}/web.xml">
			<!-- include server Impl source -->
			<zipfileset dir="${test.work.dir}"
				includes="**/server/LogViewerPortImpl.java" prefix="WEB-INF/src" />			
			<!-- include server Impl classes -->
			<classes dir="${FVT.build.classes.dir}">
				<include name="${componentName}/**/server/LogViewerPortImpl*.class" />
			</classes>
		</war>
		
		<!-- package everything together -->
		<ear earfile="${FVT.build.installableApps.dir}/jaxws.badproxy.loggerApp.ear"
		     appxml="${test.work.dir}/application.xml">
			<fileset dir="${FVT.build.lib.dir}" includes="jaxws.badproxy.logger.war" />
			<metainf dir="${test.work.dir}">
				<include name="was.policy" />
			</metainf>
		</ear>		
	</target>    

</project>
