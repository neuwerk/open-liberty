//
// @(#) 1.2 WautoFVT/src/jaxws/badproxy/wsfvt/server/NoWsdlSOAP11BadPortImpl.java, WAS.websvcs.fvt, WSFP.WFVT, a0707.12 2/14/07 17:08:13 [2/20/07 20:45:51]
//
// IBM Confidential OCO Source Material
// (C) COPYRIGHT International Business Machines Corp. 2006
// The source code for this program is not published or otherwise divested
// of its trade secrets, irrespective of what has been deposited with the
// U.S. Copyright Office.
//
// Change History:
// Date       UserId      Defect             Description
// ----------------------------------------------------------------------------
// 05/31/06   sedov       LIDB3296.41-02     New File
//

package jaxws.badproxy.wsfvt.server;

import java.util.concurrent.Future;

import javax.jws.WebService;
import javax.xml.ws.AsyncHandler;
import javax.xml.ws.BindingType;
import javax.xml.ws.Holder;
import javax.xml.ws.Response;

import jaxws.badproxy.wsfvt.common.PingResponse;
import jaxws.badproxy.wsfvt.common.asyncmethods.AsyncMethodsSEI;

/**
 * An endpoint without a wsdl or an SEI. Expecting that a wsdl
 * will be auto-generated by the runtime based on the BindingType
 * annotation. The method is fully annotated to force the wsdl to
 * be generated in accordance with pre-made wsdl used to generate
 * the client
 */
@BindingType(value = javax.xml.ws.soap.SOAPBinding.SOAP11HTTP_BINDING)
@WebService(portName="AsyncMethodsPort",
		serviceName="AsyncMethodsService",
		wsdlLocation="WEB-INF/wsdl/AsyncMethods.wsdl",
		targetNamespace="http://AsyncMethods.common.wsfvt.badproxy.jaxws",
		endpointInterface="jaxws.badproxy.wsfvt.common.asyncmethods.AsyncMethodsSEI")
public class AsyncMethodsBadPortImpl implements AsyncMethodsSEI{

	public void ping(Holder<String> ping) {
		
	}

	public Response<PingResponse> pingAsync(String ping) {

		return null;
	}

	public Future<?> pingAsync(String ping, AsyncHandler<PingResponse> asyncHandler) {

		return null;
	}



}
