<?xml version="1.0" encoding="UTF-8"?>

<!-- 
  @(#) 1.2 WautoFVT/src/jaxws/async/buildTest.xml, WAS.websvcs.fvt, WSFP.WFVT 8/31/06 13:11:17 [9/1/06 10:58:07]

  Description: Build file for the JAX-WS Dispatch API tests
 
  Date        Author       Feature/Defect          Description
  09/18/06    sedov        LIDB3296.48             New File
  09/26/06    sedov        D393133                 Updated clean target
  11/04/06    sedov        D403119                 Updated to use readCellConfig
  05/11/07    sedov        D438719                 added debug to javac
-->
<project basedir="." default="buildall" name="jaxws_async">

	<property name="componentName" value="jaxws/async"/>
	<property name="test.name" value="jw.async" />
	
    <import file="..\jaxws-commons.xml" />

	<property name="test.base.dir" value="${FVT.base.dir}/src/${componentName}" />
	<property name="test.work.dir" value="${FVT.build.work.dir}/${test.name}" />
		
	<path id="componentClasspath">
	   <path refid="jaxws.classpath"/>
	</path>	

	<target name="buildall" depends="clean, init, server, client, test" /> 
  
	<target name="init" depends="setenv">
		<echo message="${test.name} Initializing..." />
		<mkdir dir="${FVT.build.work.dir}/${test.name}/"/>
		<antcall target="component-init"/>	
	</target>
	
	<target name="clean" depends="setenv">
		<echo message="${test.name} Cleaning..." />
		
		<delete quiet="true">
			<fileset dir="${FVT.build.installableApps.dir}" includes="${test.name}*App.ear" />
			<fileset dir="${FVT.build.lib.dir}" includes="${test.name}*.war" />
		</delete>
		<delete dir="${FVT.build.work.dir}/${test.name}" />
		<delete dir="${FVT.build.classes.dir}/${componentName}" />
		
	</target>
	
	<target name="server" depends="setenv">
		<echo message="${test.name} Building Server..." />
		
		<propertyReplace property="wsdl_location"
			value="${test.work.dir}"
			replace-what="\" replace-with="/"/>
		
		<echo message="wsdl_location=${wsdl_location}" />		
		
		<!-- copy server/common files -->
		<copy todir="${test.work.dir}" overwrite="yes">
			<fileset dir="${test.base.dir}/etc">
				<include name="*.wsdl" />
				<include name="*.xsd" />			
			</fileset>
		
			<fileset dir="${FVT.base.dir}/src">
				<include name="${componentName}/**/common/*.java" />
				<include name="${componentName}/**/server/*.java" />
			</fileset>
			
			<filterset>
				<filter token="HOST" value="${server1.hostName}" />
				<filter token="PORT" value="${server1.WC_defaulthost}" />
				
				<filter token="WSDL_LOCATION" value="${wsdl_location}" />
			</filterset>			
		</copy>
		
		<!-- generate a server side proxy for DOC/LIT-Wrapped -->
		<wsimport debug="${debug}"
			      keep="false"
			      destdir="${FVT.build.classes.dir}"
			      wsdl="${test.work.dir}/async_doclitwr.wsdl"
				  wsdlLocation="WEB-INF/wsdl/async_doclitwr.wsdl">
		</wsimport>			
			
		<!-- build server/common files -->
        <javac compiler="modern"
            fork="true"
        	debug="${debug}"
            srcdir="${test.work.dir}"
            destdir="${FVT.build.classes.dir}"
            source="${build.tests.with.java.level}"
            target="${build.tests.with.java.level}"
            includes="**/server/*.java,**/common/*.java">
            <classpath refid="componentClasspath"/>
        </javac>

		<!-- generate web.xml -->
		<web-xml displayName="${test.name}" version="current"
				 file="${FVT.build.work.dir}/${test.name}/web.xml">
			<servlet servletClass="jaxws.async.wsfvt.server.DocLitWrappedPortImpl"
				     urlPattern="/services/AsyncDocLitWrappedService" />										
		</web-xml>		
		
		<!-- create a WAR file for regular tests  -->
		<war destfile="${FVT.build.lib.dir}/${test.name}.war"
			  webxml="${FVT.build.work.dir}/${test.name}/web.xml">
			
			<zipfileset dir="${test.base.dir}/etc"
				includes="*.wsdl, *.xsd"
				prefix="WEB-INF/wsdl" />
			
			<!-- include server Impl source -->
			<zipfileset dir="${test.work.dir}"
				includes="**/server/*PortImpl.java, **/common/*.java"
				prefix="WEB-INF/src" />		
			
			<!-- include server Impl classes -->
			<classes dir="${FVT.build.classes.dir}">
				<!-- only deploy the classes from server and common packages -->
				<include name="${componentName}/**/common/**/*.class" />
				<include name="${componentName}/**/server/**/*.class" />
				<!-- Service class is only useful to the client, it should be
					 excluded from the server deployment
				 -->
				<exclude name="${componentName}/**/server/*Service.class" />				
			</classes>
		</war>
		
		<!-- generate application.xml -->
		<app-xml displayName="${test.name}" version="current"
			file="${FVT.build.work.dir}/${test.name}/application.xml">
			
			<webModule war="${test.name}.war" contextRoot="${test.name}" />
		</app-xml>		
		
		<!-- package everything together -->
		<ear earfile="${FVT.build.installableApps.dir}/${test.name}App.ear"
		     appxml="${test.work.dir}/application.xml">
			<fileset dir="${FVT.build.lib.dir}" includes="${test.name}.war" />
			<metainf dir="${test.base.dir}/etc">
				<include name="was.policy" />
			</metainf>
		</ear>	
		
	</target>

	<target name="client" />
	
	<target name="test">	
		<echo message="${test.name} Building Test..." />
		
		<readCellConfig prefix="server1" key="defaultServer" verbose="false" />
		
		<!-- copy server/TestCase files -->
		<copy todir="${test.work.dir}" overwrite="yes">
			<fileset dir="${test.base.dir}/etc">
				<include name="*.wsdl" />
				<include name="*.xsd" />
				<include name="*.xml" />
			</fileset>
		
			<fileset dir="${FVT.base.dir}/src">
				<include name="${componentName}/**/test/**/*.java" />
				<include name="${componentName}/**/common/**/*.java" />				
			</fileset>
			
			<filterset>
				<filter token="HOST" value="${server1.hostName}" />
				<filter token="PORT" value="${server1.WC_defaulthost}" />
			</filterset>			
		</copy>	
		
		<property name="baseWsdlLoc"
			      value="http://${server1.hostName}:${server1.WC_defaulthost}/${test.name}/services" />
		
		<!-- generate a client side async proxy -->
		<wsimport debug="${debug}" verbose="${wsimport.verbose}"
			      keep="false"
			      destdir="${FVT.build.classes.dir}"
				  binding="${test.work.dir}/async_doclitwr.xml"
			      wsdl="${test.work.dir}/async_doclitwr.wsdl"
				  wsdlLocation="${baseWsdlLoc}/AsyncDocLitWrappedService?wsdl" />
		
		<!-- build test/common files -->
        <javac compiler="modern"
            fork="true"
        	debug="${debug}"
            srcdir="${test.work.dir}"
            destdir="${FVT.build.classes.dir}"
			source="${build.tests.with.java.level}"
			target="${build.tests.with.java.level}"
            includes="**/test/**/*.java,**/common/**/*.java">
            <classpath refid="componentClasspath"/>
        </javac>		
	</target>
	
</project>
