<?xml version="1.0" encoding="UTF-8"?>
<!--
  @(#) 1.10 autoFVT/src/jaxws/badprovider/buildTest.xml, WAS.websvcs.fvt, WAS70.FVT, r0834.51 11/28/07 14:11:39 [9/3/08 21:35:27]
 
  JAX-WS BadProvider test suite. These tests seek to deploy an invalid
  endpoint that has been somehow misconfigured. They all share web.xml/app.xml
  and wsdl file through a templating system

  To add additional tests for say XYZScenario:
	- create a service class XYZBadPortImpl
	- if there is a need for service/port names to be valid against the
	  wsdl then set them to XYZService and XYZPort
	- the endpoint will be exposed at /jaxws.badproxy.XYZ/services/XYZService
 
  Date        Author       Feature/Defect          Description
  09/31/06    sedov        LIDB3296.42.04          Initial GM drop
  11/04/06    sedov        D403119                 Update to use readCellConfig
  01/29/07    sedov        D407317                 Added PROFILE_DIR
  05/01/07    sedov        D436197                 Added was.policy to logger
  07/31/07    ulbricht     D455649                 Change jar names
  08/06/07    ulbricht     D439706                 Change admin client jar name
  11/28/07    sedov        D486125                 Extract classpath to path_refs
-->

<project basedir="." default="buildall" name="jaxws_badprovider">

	<property name="componentName" value="jaxws/badprovider"/>
	<property name="test.name" value="jaxws.badprovider" />
	
    <import file="..\jaxws-commons.xml" />

	<property name="test.base.dir" value="${FVT.base.dir}/src/${componentName}" />
	<property name="test.work.dir" value="${FVT.build.work.dir}/${test.name}" />
		
	<path id="componentClasspath">
	   <path refid="adminclientclasspath"/>	
	</path>	

	<target name="buildall" depends="clean, init, server, client, test" /> 
  
	<target name="init" depends="setenv">
		<echo message="${test.name} Initializing..." />
		<mkdir dir="${FVT.build.work.dir}/${test.name}/"/>
		<antcall target="component-init"/>	
	</target>
	
	<target name="clean" depends="setenv">
		<echo message="${test.name} Cleaning..." />
		
		<delete quiet="true">
			<fileset dir="${FVT.build.installableApps.dir}" includes="${test.name}*App.ear" />
			<fileset dir="${FVT.build.lib.dir}" includes="${test.name}*.war" />
		</delete>
		<delete dir="${FVT.build.work.dir}/${test.name}" />
		<delete dir="${FVT.build.classes.dir}/${componentName}" />
		
	</target>
	
	<target name="server" depends="setenv">
		<echo message="${test.name} Building Server..." />
		
		<readCellConfig prefix="server1" key="defaultServer" verbose="true"/>
		
		<propertyReplace property="wsdl_location"
			value="${test.work.dir}"
			replace-what="\" replace-with="/"/>
		
		<propertyReplace property="profile_dir"
			value="${server1.profileDir}"
			replace-what="\" replace-with="/"/>		
		
		<echo message="wsdl_location=${wsdl_location}" />
		
		<!-- copy server/TestCase files -->
		<copy todir="${test.work.dir}" overwrite="yes">
			<fileset dir="${test.base.dir}/etc">
				<include name="web.xml" />
				<include name="application.xml" />
				<include name="*.wsdl" />
				<exclude name="template-*" />
				<include name="*.xml" />
				<include name="*.xsd" />
				<include name="was.policy" />
			</fileset>
		
			<fileset dir="${FVT.base.dir}/src">
				<include name="${componentName}/**/server/**/*.java" />
				<include name="${componentName}/**/common/**/*.java" />				
			</fileset>
			
			<filterset>
				<filter token="HOST" value="${server1.hostName}" />
				<filter token="SOAP_PORT" value="${new.soap.connector.address}" />
				<filter token="HTTP_PORT" value="${server1.WC_defaulthost}" />
				<filter token="SERVER_NAME" value="${server.name}" />
				
				<!-- admin security -->	
				<filter token="SEC_USERNAME" value="${dist.security.user.name}" />
				<filter token="SEC_PASSWORD" value="${dist.security.password}" />
				<filter token="SEC_ENABLED"	 value="${enable.security}" />					
				
				<filter token="PROFILE_DIR" value="${profile_dir}" />				
				<filter token="WSDL_LOCATION" value="${wsdl_location}" />
			</filterset>			
		</copy>	
		
		<!-- build server/common files -->
        <javac compiler="modern"
            fork="true"
        	debug="${debug}"
            srcdir="${test.work.dir}"
            destdir="${FVT.build.classes.dir}"
            source="${build.tests.with.java.level}"
            target="${build.tests.with.java.level}"
            includes="**/server/*.java,**/common/*.java">
            <classpath>
            	<path refid="componentClasspath"/>
                <path refid="classpath"/>            	
           	</classpath>
        </javac>
		
		<!-- package wars/ears -->
		<antcall target="createServerEar" />
		
		<!-- build the logger -->
		<antcall target="build_logger" />
	</target>

	<target name="client" />
	
	<target name="test" depends="setenv">	
		<echo message="${test.name} Building Test..." />
		
		<readCellConfig prefix="server1" key="defaultServer" />
		
		<propertyReplace property="profile_dir"
			value="${server1.profileDir}"
			replace-what="\" replace-with="/"/>			
		
		<propertyReplace property="ssl_cert_path"
			value="${server1.profileDir}/etc"
			replace-what="\" replace-with="/"/>			
		
		<!-- copy server/TestCase files -->
		<copy todir="${test.work.dir}" overwrite="yes">
			<fileset dir="${test.base.dir}/etc">
				<include name="Provider*.wsdl" />				
			</fileset>
		
			<fileset dir="${FVT.base.dir}/src">
				<include name="${componentName}/**/test/**/*.java" />
				<include name="${componentName}/**/common/**/*.java" />				
			</fileset>
			
			<filterset>
				<filter token="SEC_USERNAME" value="${server1.wasUserName}" />
				<filter token="SEC_PASSWORD" value="${server1.wasPassword}" />
				<filter token="SEC_ENABLED"	 value="${server1.isSecurityEnabled}" />				
				<filter token="SEC_SSL_CERT_PATH"	value="${ssl_cert_path}" />				
				
				<filter token="SERVER_NAME"	value="${server1.serverName}" />								
				<filter token="HOST" value="${server1.hostName}" />
				<filter token="HTTP_PORT" value="${server1.WC_defaulthost}" />
				<filter token="SOAP_PORT" value="${server1.SOAP_CONNECTOR_ADDRESS}" />					
				
				<filter token="PROFILE_DIR" value="${profile_dir}" />								
				<filter token="WSDL_LOCATION" value="${wsdl_location}" />
			</filterset>		
		</copy>	

		<!-- build test/common files -->
        <javac compiler="modern"
            fork="true"
        	debug="${debug}"
            srcdir="${test.work.dir}"
            destdir="${FVT.build.classes.dir}"
        	source="${build.tests.with.java.level}"
            target="${build.tests.with.java.level}"
            includes="**/test/**/*.java,**/common/**/*.java">
            <classpath refid="componentClasspath"/>
        </javac>		
	</target>
	
	<!-- create separate EARs for each server class -->
    <target name="createServerEar">
		<echo message="${test.name} Building server EAR..." />
		
		<property name="wsdl-location" value="WEB-INF/wsdl"/>
	    <property name="namespace" value="http://common.wsfvt.badprovider.jaxws" />
		<property name="web-xml" value="${test.work.dir}/web.xml"/>
		<property name="web-xml-work-dir" value="${test.work.dir}/tmp-web-xml" />
		
		<!-- create a separate war for each negative provider test -->
		<ear-single-file
			    base-test-name="${test.name}"
			    test-name="NoAnnotation"
		        endpoint-impl-class="jaxws.badprovider.wsfvt.server.NoAnnotationBadPortImpl"
				endpoint-impl-class-filter="${componentName}/**/NoAnnotationBadPortImpl.class"
				base-wsdl-location="${wsdl-location}"
			    namespace="${namespace}"
			    src-xml-dir="${test.base.dir}/etc"
				dst-xml-dir="${web-xml-work-dir}">
				<extra-class-filters>
					<include name="${componentName}/**/PingProvider.class" />
					<include name="${componentName}/**/Constants.class" />
				</extra-class-filters>
		</ear-single-file>
		
		<!-- create a separate war for each negative provider test -->
		<ear-single-file
		    base-test-name="${test.name}"
				test-name="PrivateConstructor"
		        endpoint-impl-class="jaxws.badprovider.wsfvt.server.PrivateConstructorBadPortImpl"
				endpoint-impl-class-filter="${componentName}/**/PrivateConstructorBadPortImpl.class"
				base-wsdl-location="${wsdl-location}"
			    namespace="${namespace}"
			    src-xml-dir="${test.base.dir}/etc"
				dst-xml-dir="${web-xml-work-dir}">
				<extra-class-filters>
					<include name="${componentName}/**/PingProvider.class" />
					<include name="${componentName}/**/Constants.class" />
				</extra-class-filters>
		</ear-single-file>
    	
		<!-- create a separate war for each negative provider test -->
		<ear-single-file
		    base-test-name="${test.name}"			
			test-name="Defaults"
		        endpoint-impl-class="jaxws.badprovider.wsfvt.server.DefaultsBadPortImpl"
				endpoint-impl-class-filter="${componentName}/**/DefaultsBadPortImpl.class"
				base-wsdl-location="${wsdl-location}"
			    namespace="${namespace}"
			    src-xml-dir="${test.base.dir}/etc"
				dst-xml-dir="${web-xml-work-dir}">
				<extra-class-filters>
					<include name="${componentName}/**/PingProvider.class" />
					<include name="${componentName}/**/Constants.class" />
				</extra-class-filters>
		</ear-single-file>
    	
		<!-- create a separate war for each negative provider test -->
		<ear-single-file
		    base-test-name="${test.name}"			
			test-name="UntypedProvider"
		        endpoint-impl-class="jaxws.badprovider.wsfvt.server.UntypedProviderBadPortImpl"
				endpoint-impl-class-filter="${componentName}/**/UntypedProviderBadPortImpl.class"
				base-wsdl-location="${wsdl-location}"
			    namespace="${namespace}"
			    src-xml-dir="${test.base.dir}/etc"
				dst-xml-dir="${web-xml-work-dir}">
				<extra-class-filters>
					<include name="${componentName}/**/PingProvider.class" />
					<include name="${componentName}/**/Constants.class" />
				</extra-class-filters>
		</ear-single-file>
    	
		<!-- create a separate war for each negative provider test -->
		<ear-single-file
		    base-test-name="${test.name}"
			test-name="UnsupportedType"
		        endpoint-impl-class="jaxws.badprovider.wsfvt.server.UnsupportedTypeBadPortImpl"
				endpoint-impl-class-filter="${componentName}/**/UnsupportedTypeBadPortImpl.class"
				base-wsdl-location="${wsdl-location}"
			    namespace="${namespace}"
			    src-xml-dir="${test.base.dir}/etc"
				dst-xml-dir="${web-xml-work-dir}">
				<extra-class-filters>
					<include name="${componentName}/**/PingProvider.class" />
					<include name="${componentName}/**/Constants.class" />
				</extra-class-filters>
		</ear-single-file>    	
		
		<!-- create a separate war for each negative provider test -->
		<ear-single-file
		    base-test-name="${test.name}"
			test-name="InvalidBinding"
		        endpoint-impl-class="jaxws.badprovider.wsfvt.server.InvalidBindingBadPortImpl"
				endpoint-impl-class-filter="${componentName}/**/InvalidBindingBadPortImpl.class"
				base-wsdl-location="${wsdl-location}"
			    namespace="${namespace}"
			    src-xml-dir="${test.base.dir}/etc"
				dst-xml-dir="${web-xml-work-dir}">
				<extra-class-filters>
					<include name="${componentName}/**/PingProvider.class" />
					<include name="${componentName}/**/Constants.class" />
				</extra-class-filters>
		</ear-single-file> 
    	
		<!-- create a separate war for each negative provider test -->
		<ear-single-file
		    base-test-name="${test.name}"
			test-name="NonProviderWSP"
		        endpoint-impl-class="jaxws.badprovider.wsfvt.server.NonProviderWSPBadPortImpl"
				endpoint-impl-class-filter="${componentName}/**/NonProviderWSPBadPortImpl.class"
				base-wsdl-location="${wsdl-location}"
			    namespace="${namespace}"
			    src-xml-dir="${test.base.dir}/etc"
				dst-xml-dir="${web-xml-work-dir}">
				<extra-class-filters>
					<include name="${componentName}/**/PingProvider.class" />
					<include name="${componentName}/**/Constants.class" />
				</extra-class-filters>
		</ear-single-file>  	
			
			<!-- create a separate war for each negative provider test -->
			<ear-single-file
			    base-test-name="${test.name}"
				test-name="WSPandWS"
			        endpoint-impl-class="jaxws.badprovider.wsfvt.server.WSPandWSBadPortImpl"
					endpoint-impl-class-filter="${componentName}/**/WSPandWSBadPortImpl.class"
					base-wsdl-location="${wsdl-location}"
				    namespace="${namespace}"
				    src-xml-dir="${test.base.dir}/etc"
					dst-xml-dir="${web-xml-work-dir}">
					<extra-class-filters>
						<include name="${componentName}/**/PingProvider.class" />
						<include name="${componentName}/**/Constants.class" />
					</extra-class-filters>
			</ear-single-file>      	
    	
		<!-- create a separate war for each negative provider test -->
		<ear-single-file
		    base-test-name="${test.name}"
			test-name="WSProvider"
		        endpoint-impl-class="jaxws.badprovider.wsfvt.server.WSProviderBadPortImpl"
				endpoint-impl-class-filter="${componentName}/**/WSProviderBadPortImpl.class"
				base-wsdl-location="${wsdl-location}"
			    namespace="${namespace}"
			    src-xml-dir="${test.base.dir}/etc"
				dst-xml-dir="${web-xml-work-dir}">
				<extra-class-filters>
					<include name="${componentName}/**/PingProvider.class" />
					<include name="${componentName}/**/Constants.class" />
				</extra-class-filters>
		</ear-single-file>       	
    	
			<!-- create a separate war for each negative provider test -->
			<ear-single-file
			    base-test-name="${test.name}"
				test-name="SOAP12PayloadDataSource"
			        endpoint-impl-class="jaxws.badprovider.wsfvt.server.SOAP12PayloadDataSourceBadPortImpl"
					endpoint-impl-class-filter="${componentName}/**/SOAP12PayloadDataSourceBadPortImpl.class"
					base-wsdl-location="${wsdl-location}"
				    namespace="${namespace}"
					wsdl-protocol="soap12"				    
				    src-xml-dir="${test.base.dir}/etc"
					dst-xml-dir="${web-xml-work-dir}">
					<extra-class-filters>
						<include name="${componentName}/**/PingProvider.class" />
						<include name="${componentName}/**/Constants.class" />
					</extra-class-filters>
			</ear-single-file>  				
    	
		<!-- create a separate war for each negative provider test -->
		<ear-single-file
		    base-test-name="${test.name}"
			test-name="SOAP11PayloadSoapMessage"
		        endpoint-impl-class="jaxws.badprovider.wsfvt.server.SOAP11PayloadSoapMessageBadPortImpl"
				endpoint-impl-class-filter="${componentName}/**/SOAP11PayloadSoapMessageBadPortImpl.class"
				base-wsdl-location="${wsdl-location}"
			    namespace="${namespace}"
			    src-xml-dir="${test.base.dir}/etc"
				dst-xml-dir="${web-xml-work-dir}">
				<extra-class-filters>
					<include name="${componentName}/**/PingProvider.class" />
					<include name="${componentName}/**/Constants.class" />
				</extra-class-filters>
		</ear-single-file>     
    	
		<!-- create a separate war for each negative provider test -->
		<ear-single-file
			    base-test-name="${test.name}"
				test-name="SOAP12PayloadSoapMessage"
		        endpoint-impl-class="jaxws.badprovider.wsfvt.server.SOAP12PayloadSoapMessageBadPortImpl"
				endpoint-impl-class-filter="${componentName}/**/SOAP12PayloadSoapMessageBadPortImpl.class"
				base-wsdl-location="${wsdl-location}"
			    namespace="${namespace}"
				wsdl-protocol="soap12"			    
			    src-xml-dir="${test.base.dir}/etc"
				dst-xml-dir="${web-xml-work-dir}">
				<extra-class-filters>
					<include name="${componentName}/**/PingProvider.class" />
					<include name="${componentName}/**/Constants.class" />
				</extra-class-filters>
		</ear-single-file>  
						
		<!-- create a separate war for each negative provider test -->
		<ear-single-file
		    base-test-name="${test.name}"
			test-name="HTTPMessageSoapMessage"
		        endpoint-impl-class="jaxws.badprovider.wsfvt.server.HTTPMessageSoapMessageBadPortImpl"
				endpoint-impl-class-filter="${componentName}/**/HTTPMessageSoapMessageBadPortImpl.class"
				base-wsdl-location="${wsdl-location}"
			    namespace="${namespace}"
			    wsdl-protocol="http"
			    src-xml-dir="${test.base.dir}/etc"
				dst-xml-dir="${web-xml-work-dir}">
				<extra-class-filters>
					<include name="${componentName}/**/PingProvider.class" />
					<include name="${componentName}/**/Constants.class" />
				</extra-class-filters>
		</ear-single-file>  
    	
		<!-- create a separate war for each negative provider test -->
		<ear-single-file
		    base-test-name="${test.name}"
			test-name="SOAP11MessageDataSource"
		        endpoint-impl-class="jaxws.badprovider.wsfvt.server.SOAP11MessageDataSourceBadPortImpl"
				endpoint-impl-class-filter="${componentName}/**/SOAP11MessageDataSourceBadPortImpl.class"
				base-wsdl-location="${wsdl-location}"
			    namespace="${namespace}"
			    src-xml-dir="${test.base.dir}/etc"
				dst-xml-dir="${web-xml-work-dir}">
				<extra-class-filters>
					<include name="${componentName}/**/PingProvider.class" />
					<include name="${componentName}/**/Constants.class" />
				</extra-class-filters>
		</ear-single-file>  
			
		<!-- create a separate war for each negative provider test -->
		<ear-single-file
		    base-test-name="${test.name}"
			test-name="SOAP12PayloadDataSource"
		        endpoint-impl-class="jaxws.badprovider.wsfvt.server.SOAP12PayloadDataSourceBadPortImpl"
				endpoint-impl-class-filter="${componentName}/**/SOAP12PayloadDataSourceBadPortImpl.class"
				base-wsdl-location="${wsdl-location}"
				wsdl-protocol="soap12"
			    namespace="${namespace}"
			    src-xml-dir="${test.base.dir}/etc"
				dst-xml-dir="${web-xml-work-dir}">
				<extra-class-filters>
					<include name="${componentName}/**/PingProvider.class" />
					<include name="${componentName}/**/Constants.class" />
				</extra-class-filters>
		</ear-single-file>  		
    		
    </target>
	
	<target name="build_logger">
	
		<!-- create a WAR file for regular tests  -->
		<war destfile="${FVT.build.lib.dir}/jaxws.badprovider.logger.war"
			  webxml="${FVT.build.work.dir}/${test.name}/web.xml">
			<!-- include server Impl source -->
			<zipfileset dir="${test.work.dir}"
				includes="**/server/LogViewerPortImpl.java" prefix="WEB-INF/src" />			
			<!-- include server Impl classes -->
			<classes dir="${FVT.build.classes.dir}">
				<include name="${componentName}/**/server/**/LogViewerPortImpl*.class" />
			</classes>
		</war>
		
		<!-- package everything together -->
		<ear earfile="${FVT.build.installableApps.dir}/jaxws.badprovider.loggerApp.ear"
		     appxml="${test.work.dir}/application.xml">
			<fileset dir="${FVT.build.lib.dir}" includes="jaxws.badprovider.logger.war" />
			<metainf dir="${test.work.dir}">
				<include name="was.policy" />
			</metainf>
		</ear>		
	</target>

</project>
