<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE project [
        <!ENTITY instance SYSTEM "../../../instance.xml"><!-- file:34 -->
        <!ENTITY properties SYSTEM "../../xmls/properties.xml"><!-- file:36 -->
        <!ENTITY paths SYSTEM "../../xmls/path_refs.xml"><!-- file:31 -->
        <!ENTITY targets SYSTEM "../../xmls/targets.xml"><!-- file:33 -->
        <!ENTITY taskdefs SYSTEM "../../xmls/taskdefs.xml"><!-- file:34 -->
        <!ENTITY taskdefs_post_compile SYSTEM "../../xmls/taskdefs_post_compile.xml"><!-- file:47 -->
]>
<!-- 
  @(#) 1.11 autoFVT/src/jaxws/dispatch/buildTest.xml, WAS.websvcs.fvt, WAS85.FVT, cf011231.01 3/13/10 18:10:08 [8/8/12 06:54:45]

  Description: Build file for the JAX-WS Dispatch API tests
 
  Date        Author       Feature/Defect          Description
  05/31/06    sedov        LIDB3296.42             New File
  08/31/06    ulbricht     D388011                 Fix build failure on Linux
  11/04/06    sedov        D403119                 Update to use readCellConfig
  03/13/10    lizet        D643070                 2.2 RI upgrade
-->
     	
<project basedir="." default="buildall" name="jaxws_dispatch">
	&instance;
	  &properties;
	  &paths;
	  &targets;
	  &taskdefs;
	  &taskdefs_post_compile;

	<property name="componentName" value="jaxws/dispatch"/>
	<property name="test.name" value="jw.dispatch" />
	
    <import file="..\jaxws-commons.xml" />

	<property name="test.base.dir" value="${FVT.base.dir}/src/${componentName}" />
	<property name="test.work.dir" value="${FVT.build.work.dir}/${test.name}" />
	
	<path id="componentClasspath">
	   <path refid="jaxws.classpath"/>
	</path>	
  
	<target name="buildall" depends="clean, init, server, client, test, preinstall" /> 
	
	<target name="init" depends="setenv">
		<echo message="${test.name} Initializing..." />
		<mkdir dir="${FVT.build.work.dir}/${test.name}/"/>
		<antcall target="component-init"/>	
	</target>
	
	<target name="clean" depends="setenv">
		<echo message="${test.name} Cleaning..." />
		
		<delete>
			<fileset dir="${FVT.build.installableApps.dir}" includes="${test.name}*App.ear" />
			<fileset dir="${FVT.build.lib.dir}" includes="${test.name}*.war" />
		</delete>
		<delete dir="${FVT.build.work.dir}/${test.name}" />
		<delete dir="${FVT.build.classes.dir}/${componentName}" />
		
	</target>
	
	<target name="server" depends="setenv">
		<echo message="${test.name} Building Server files..." />
			
		<propertyReplace property="wsdl_location"
			value="${test.work.dir}"
			replace-what="\" replace-with="/"/>
		
		<echo message="wsdl_location=${wsdl_location}" />
		
		<!-- copy server/common files -->
		<copy todir="${test.work.dir}" overwrite="yes">
			<fileset dir="${test.base.dir}/etc">
				<include name="web.xml" />
				<include name="application.xml" />
				<include name="${vendor.binding.file}" />
				<include name="*.wsdl" />
				<include name="*.xsd" />			
			</fileset>
		
			<fileset dir="${FVT.base.dir}/src">
				<include name="${componentName}/**/common/*.java" />
				<include name="${componentName}/**/server/*.java" />
			</fileset>
			
			<filterset>
				<filter token="SERVLET_CLASS"  value="${WSServletClass}" />

				<filter token="HOST" value="${server1.hostName}" />
				<filter token="PORT" value="${server1.WC_defaulthost}" />
				
				<filter token="WSDL_LOCATION" value="${wsdl_location}" />
			</filterset>			
		</copy>
        
        <copy todir="${test.work.dir}" overwrite="yes">
		  <!-- copy some messages for the DataSource tests -->
          <fileset dir="${test.base.dir}">
            <include name="etc/mime/*"/>
          </fileset>
        </copy>	        	
	
		<libertyxjc schema="${test.base.dir}/etc/schema.xsd"
			 destdir="${test.work.dir}" target="2.2"/>		
		
		<!-- compile the SOAP 1.1 Schema for JAXBSource/MESSAGE mode tests -->
		<libertyxjc schema="${test.base.dir}/etc/soap11_envelope.xsd"
			 destdir="${test.work.dir}" package="jaxws.dispatch.wsfvt.common.soap11" target="2.2"/>		

		<!-- compile the SOAP 1.2 Schema for JAXBSource/MESSAGE mode tests -->
		<libertyxjc schema="${test.base.dir}/etc/soap12_envelope.xsd"
			 destdir="${test.work.dir}" package="jaxws.dispatch.wsfvt.common.soap12" target="2.2"/>			

		<!-- generate web.xml -->
		<web-xml displayName="${test.name}" version="current"
				 file="${FVT.build.work.dir}/${test.name}/web.xml">
			
			<servlet servletClass="jaxws.dispatch.wsfvt.server.SOAP11DispatchPortImpl"
				     urlPattern="/services/DispatchSOAP11" />
				     
			<servlet servletClass="jaxws.dispatch.wsfvt.server.SOAP12DispatchPortImpl"
			         urlPattern="/services/DispatchSOAP12" />										
			
			<servlet servletClass="jaxws.dispatch.wsfvt.server.DispatchSimplePortImpl"
			         urlPattern="/services/DispatchSimple" />
		</web-xml>		
		
		<!-- build server/common files -->
        <javac compiler="modern"
            fork="true"
            debug="${debug}"
            srcdir="${test.work.dir}"
            destdir="${FVT.build.classes.dir}"
  	        source="${build.tests.with.java.level}"
  	        target="${build.tests.with.java.level}"
            includes="**/server/**/*.java,**/common/**/*.java">
            <classpath>
            	<path refid="thinclientclasspath"/>
            	<path refid="classpath"/>
            </classpath>
        </javac>	
		
		<!-- create a war for regular tests  -->
		<war destfile="${FVT.build.lib.dir}/${test.name}.war"
		     webxml="${test.work.dir}/web.xml">
    	    <zipfileset
                dir="${test.work.dir}"
                includes="*.wsdl, *.xsd"
                prefix="WEB-INF/wsdl"/>	
			
			<!-- include the mime messages -->
    	    <zipfileset
                dir="${test.work.dir}/etc/mime"
                includes="*"
                prefix="mime"/>			
			
			<webinf dir="${test.work.dir}"
			        includes="${vendor.binding.file}"/>
				
			<classes dir="${FVT.build.classes.dir}">
				<include name="${componentName}/**/common/*.class" />
				<include name="${componentName}/**/server/*.class" />
				<exclude name="${componentName}/**/server/*BadPortImpl.class" />
			</classes>
		</war>		
		
		<!-- generate application.xml -->
		<app-xml
			displayName="${test.name}"
			file="${FVT.build.work.dir}/${test.name}/application.xml"
			version="current">
			<webModule war="${test.name}.war" contextRoot="${test.name}" />
		</app-xml>		
		
		<ear earfile="${FVT.build.installableApps.dir}/${test.name}App.ear"
		     appxml="${test.work.dir}/application.xml">
			<fileset dir="${FVT.build.lib.dir}" includes="${test.name}*.war" />
			<metainf dir="${test.work.dir}">
				<include name="*.xmi" />
				<include name="was.policy" />
			</metainf>
		</ear>
		
	</target>

	<!-- trarget not used by this test suite -->
	<target name="client" />
	
	<target name="test" depends="setenv">
		<echo message="${test.name} Building test files..." />
		
		<readCellConfig prefix="server1" key="defaultServer" />
		
		<propertyReplace property="wsdl_location"
			value="${test.work.dir}"
			replace-what="\" replace-with="/"/>		
		
		<!-- copy common/TestCase files -->
		<copy todir="${test.work.dir}" overwrite="yes">
		
			<fileset dir="${FVT.base.dir}/src">
				<include name="${componentName}/**/common/*.java" />
				<include name="${componentName}/**/test/*.java" />
			</fileset>
			
			<filterset>
				<filter token="HOST" value="${server1.hostName}" />
				<filter token="PORT" value="${server1.WC_defaulthost}" />
				
				<filter token="WSDL_LOCATION" value="${wsdl_location}" />
			</filterset>				
		</copy>	        	
    	
        <!--wsimport
            debug="${debug}"
            keep="false"
            destdir="${FVT.build.classes.dir}"
            wsdl="${FVT.build.work.dir}/${test.name}/dispatch.wsdl">
        </wsimport-->		
		
		<libertyxjc schema="${test.base.dir}/etc/schema.xsd"
			 destdir="${test.work.dir}" target="2.2"/>		

		<!-- compile the SOAP 1.1 Schema for JAXBSource/MESSAGE mode tests -->
		<libertyxjc schema="${test.base.dir}/etc/soap11_envelope.xsd"
			 destdir="${test.work.dir}" package="jaxws.dispatch.wsfvt.common.soap11" target="2.2"/>		

		<!-- compile the SOAP 1.2 Schema for JAXBSource/MESSAGE mode tests -->
		<libertyxjc schema="${test.base.dir}/etc/soap12_envelope.xsd"
			 destdir="${test.work.dir}" package="jaxws.dispatch.wsfvt.common.soap12" target="2.2"/>			
		
		<!-- build client/common files -->
        <javac compiler="modern"
            fork="true"
            debug="${debug}"
            srcdir="${test.work.dir}"
            destdir="${FVT.build.classes.dir}"
  	        source="${build.tests.with.java.level}"
  	        target="${build.tests.with.java.level}"
            includes="**/test/**/*.java,**/common/**/*.java">
            <classpath>
            	<path refid="thinclientclasspath"/>
            	<path refid="classpath"/>
            </classpath>
        </javac>	
	
	</target>
	
	<!-- EJB deply, not used in this test -->
	<target name="preinstall" />

</project>
