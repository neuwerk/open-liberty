<?xml version="1.0" encoding="UTF-8"?>
<!-- 
  @(#) 1.3 autoFVT/src/jaxws/proxy/wsdltypes/buildTest.xml, WAS.websvcs.fvt, WAS85.FVT, cf011231.01 11/29/06 09:27:17 [8/8/12 06:55:44]

  Description: Build file for the JAX-WS Dynamic Proxy tests
 
  Date        Author       Feature/Defect          Description
  11/15/06    sedov        D404343                 New File, split jaxws.proxy bucket
  11/29/06    sedov        D408513                 Update cleanup routine    
-->

<project basedir="." default="buildall" name="jaxws_proxy_wsdltypes">

	<property name="componentName" value="jaxws/proxy/wsdltypes" />
	<property name="baseName" value="jaxws/proxy" />
	<property name="test.name" value="jwpr.wsdltypes" />

	<import file="../../jaxws-commons.xml" />

	<property name="test.base.dir" value="${FVT.base.dir}/src/${componentName}" />
	<property name="test.work.dir" value="${FVT.build.work.dir}/${test.name}" />

	<path id="componentClasspath">
		<path refid="jaxws.classpath" />
	</path>

	<target name="buildall" depends="clean, init, server, client, test, preinstall" />

	<target name="init" depends="setenv">
		<echo message="${test.name} Initializing..." />
		<antcall target="component-init" />
		
		<mkdir dir="${FVT.build.work.dir}/${test.name}"/>
		<mkdir dir="${FVT.build.classes.dir}"/>
		<mkdir dir="${FVT.build.lib.dir}"/>
		<mkdir dir="${FVT.build.installableApps.dir}"/>	
	</target>

	<target name="clean">
		<echo message="${test.name} Cleaning..." />

		<delete file="${FVT.build.installableApps.dir}/${test.name}App.ear" />
		<delete file="${FVT.build.lib.dir}/${test.name}.war" />

		<delete dir="${FVT.build.work.dir}/${test.name}" />
		
		<delete dir="${FVT.build.classes.dir}/${componentName}" />
		<delete dir="${FVT.build.classes.dir}/${baseName}/common" />
	</target>

	<!-- Build server artifacts -->
	<target name="server" depends="setenv">
		<echo message="${test.name} building server..." />

		<mkdir dir="${FVT.build.work.dir}/${test.name}"/>
		<delete dir="${FVT.build.classes.dir}/${baseName}/common" />
		
		<readCellConfig prefix="server1" key="defaultServer" verbose="false"/>

		<propertyReplace property="wsdl_location"
			value="${test.work.dir}"
			replace-what="\" replace-with="/"/>
		
		<echo message="wsdl_location=${wsdl_location}" />		
		<echo message="server=${server1.hostName}:${server1.WC_defaulthost}" />		
		<echo message="testWorkDir=${test.work.dir}" />
		
		<!-- copy server/common files -->
		<copy todir="${test.work.dir}" overwrite="yes">
			<!-- copy DDs/wsdls/schemas files -->
			<fileset dir="${test.base.dir}/etc">
				<include name="*.xml" />
				<include name="*.wsdl" />
				<include name="*.xsd" />
			</fileset>

			<!-- copy source files -->
			<fileset dir="${FVT.base.dir}/src">
				<include name="${componentName}/**/server/*.java"/>
			</fileset>		
			
			<!-- copy common files -->
			<fileset dir="${FVT.base.dir}/src">
				<include name="${baseName}/common/**/*.java" />
			</fileset>	
			
			<!--
				Patch the soap:address in wsdls, and include this info in the
				Constants.java 
			 -->
			<filterset>
				<filter token="HOST" value="${server1.hostName}" />
				<filter token="PORT" value="${server1.WC_defaulthost}" />
				
				<filter token="WSDL_LOCATION" value="${wsdl_location}" />
			</filterset>
		</copy>
	
		<!-- Build DOC/LIT-Wrapped wsdltypes wsdl -->
		<wsimport debug="${debug}" verbose="true"
			      keep="false"
			      extension="true"
			      destdir="${FVT.build.classes.dir}"
			      wsdl="${test.work.dir}/proxy_wsdltypes.wsdl"
			      wsdlLocation="WEB-INF/proxy_wsdltypes.wsdl" />
	      <!-- binding="${test.work.dir}/proxy_wsdltypes.xml" -->
			
		<!-- compile common and server classes -->
		<javac compiler="modern" fork="true"
			srcdir="${test.work.dir}"
			destdir="${FVT.build.classes.dir}"
			source="${build.tests.with.java.level}"
			target="${build.tests.with.java.level}"
			includes="**/server/*.java,**/common/**/*.java">
			<classpath>
				<path refid="classpath" />
				<path refid="componentClasspath" />
			</classpath>
		</javac>

		<!-- generate web.xml -->
		<web-xml displayName="${test.name}"
				 file="${FVT.build.work.dir}/${test.name}/web.xml"
				 version="current">
			<servlet servletClass="jaxws.proxy.wsdltypes.wsfvt.server.ProxyWsdlTypesPortImpl"
				     urlPattern="/services/ProxyWsdlTypesService" />															
		</web-xml>

		<!-- create a WAR file for regular tests  -->
		<war destfile="${FVT.build.lib.dir}/${test.name}.war"
			  webxml="${FVT.build.work.dir}/${test.name}/web.xml">
			<zipfileset dir="${test.base.dir}/etc"
				includes="*.wsdl, *.xsd"
				prefix="WEB-INF/wsdl" />

			<!-- include server Impl source -->
			<zipfileset dir="${test.work.dir}"
				includes="**/server/*PortImpl.java, **/common/*.java"
				prefix="WEB-INF/src" />	
						
			<!-- include server Impl classes -->
			<classes dir="${FVT.build.classes.dir}">
				<!-- only deploy the classes from server and common packages -->
				<include name="${baseName}/common/**/*.class" />
				<include name="${componentName}/**/*.class" />
				<exclude name="${componentName}/**/*Test.class" />
				<exclude name="${componentName}/**/*Service.class" />				
			</classes>
		</war>

		<!-- generate application.xml -->
		<app-xml
			displayName="${test.name}"
			file="${FVT.build.work.dir}/${test.name}/application.xml"
			version="current">
			<webModule war="${test.name}.war" contextRoot="${test.name}" />
		</app-xml>
		
		<!-- Create EAR file -->
		<ear
			earfile="${FVT.build.installableApps.dir}/${test.name}App.ear"
			appxml="${FVT.build.work.dir}/${test.name}/application.xml">
			<fileset dir="${FVT.build.lib.dir}" includes="${test.name}.war" />
			<metainf dir="${test.base.dir}/etc">
				<include name="was.policy" />
			</metainf>
		</ear>

	</target>

	<target name="client" />	
	
	<!-- Build test artifacts -->
	<target name="test" depends="setenv">
		<echo message="${test.name} building TestCases..." />

		<mkdir dir="${FVT.build.work.dir}/${test.name}"/>
		<delete dir="${FVT.build.classes.dir}/${baseName}/common" />
		
		<readCellConfig prefix="server1" key="defaultServer" verbose="false" />

		<propertyReplace property="wsdl_location"
			value="${test.work.dir}"
			replace-what="\" replace-with="/"/>
		
		<!-- copy test/common files -->
		<copy todir="${test.work.dir}" overwrite="yes">

			<!-- copy wsdls, schemas, and wsdl-customization files -->
			<fileset dir="${test.base.dir}/etc">
				<include name="**/*.xml" />
				<include name="**/*.wsdl" />
				<include name="**/*.xsd" />			
			</fileset>			
			
			<!-- copy source files -->
			<fileset dir="${FVT.base.dir}/src">
				<include name="${componentName}/**/test/*.java"/>
			</fileset>		
			
			<!-- copy common files -->
			<fileset dir="${FVT.base.dir}/src">
				<include name="${baseName}/common/**/*.java" />
			</fileset>

			<!-- patch soap:address in WSDLs and Constants.java -->
			<filterset>
				<filter token="HOST" value="${server1.hostName}" />
				<filter token="PORT" value="${server1.WC_defaulthost}" />
				
				<filter token="WSDL_LOCATION" value="${wsdl_location}" />
			</filterset>
		</copy>

		<property name="baseWsdlLoc"
			value="http://${server1.hostName}:${server1.WC_defaulthost}/${test.name}/services" />

		<!-- Build DOC/LIT-Wrapped wsdltypes wsdl -->
		<wsimport debug="${debug}" verbose="true"
			      keep="false"
			      extension="true"
			      destdir="${FVT.build.classes.dir}"
			      wsdl="${test.work.dir}/proxy_wsdltypes.wsdl"
			      wsdlLocation="${baseWsdlLoc}/ProxyWsdlTypesService?wsdl" />
			      <!-- binding="${test.work.dir}/proxy_wsdltypes.xml" -->
		
		<!-- compile common and server classes -->
		<javac compiler="modern" fork="true"
			   srcdir="${FVT.build.work.dir}/${test.name}"
			   destdir="${FVT.build.classes.dir}"
		       source="${build.tests.with.java.level}"
		       target="${build.tests.with.java.level}"
			   includes="**/test/**/*.java,**/common/**/*.java">
			<classpath>
				<path refid="classpath" />
				<path refid="componentClasspath" />
			</classpath>
		</javac>	
		
	</target>

	<target name="preinstall" />
	
</project>