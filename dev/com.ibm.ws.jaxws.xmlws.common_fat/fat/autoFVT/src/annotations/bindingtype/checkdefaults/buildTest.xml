<?xml version="1.0"?>
<!DOCTYPE project [
    <!ENTITY instance SYSTEM "../../../../instance.xml"><!-- file:30 -->
    <!ENTITY properties SYSTEM "../../../xmls/properties.xml"><!-- file:32 -->
    <!ENTITY paths SYSTEM "../../../xmls/path_refs.xml"><!-- file:27 -->
    <!ENTITY targets SYSTEM "../../../xmls/targets.xml"><!-- file:29 -->
    <!ENTITY taskdefs SYSTEM "../../../xmls/taskdefs.xml"><!-- file:30 -->
    <!ENTITY taskdefs_post_compile SYSTEM "../../../xmls/taskdefs_post_compile.xml"><!-- file:43 -->
]>

<!-- 1.1.1.5, 8/3/07

        Description: Build file for the bindingtype/checkdefaults test.

        Date        Author       Feature/Defect          Description
        07/10/2006  euzunca      LIDB3296.31.01          New File
        02/13/2007  btiffany                             define wsdllocation in wsimport so will work on Z-os.
        04/10/2007  btiffany                             supply wsdl w soap12 ear as required by jsr224.
-->

<project name="build" default="buildall" basedir=".">


        <!-- These are XML entity refs.  Basically these statements cause the
                files declared in the DOCTYPE at the top of the file to be imported
                into this build file. -->
          &instance;
          &properties;
          &paths;
          &targets;
          &taskdefs;
          &taskdefs_post_compile;

        <!-- This property should match the package name of the test class.  The
                property is used in the targets.xml file when running any of the
                component-run* targets for running a single test case class. -->
        <property name="componentName" value="annotations/bindingtype/checkdefaults/test" />


        <!-- This path id is used in the targets.xml file when running any of
                the component-run* targets.  This allows setting the classpath
                for an individual test. -->
        <path id="componentClasspath">
                <path refid="thinclientclasspath" />
        </path>


        <!-- The buildall target will execute all of the targets necessary
                before installing the test into WebSphere. -->
        <target name="buildall" depends="setenv, clean, init, server, client, test, preinstall">

        </target>

        <!-- The clean target will clean any files, classes, or directories
                so that a new copy of the test can be built and run. -->
        <target name="clean" depends="setenv">
                <delete dir="${FVT.build.classes.dir}/annotations/bindingtype/checkdefaults" />
                <delete dir="${FVT.build.work.dir}/annotations/bindingtype/checkdefaults" />
        </target>


        <!-- The init target will initialize any directories, properties, etc.
                that are needed for the test. -->
        <target name="init" depends="setenv">
                <antcall target="component-init" />
                <mkdir dir="${FVT.build.work.dir}/annotations/bindingtype/checkdefaults" />
        </target>


        <target name="server" depends="setenv" >
                <copy todir="${FVT.build.work.dir}/annotations/bindingtype/checkdefaults/serverDefault" overwrite="yes">
                        <fileset dir="${FVT.base.dir}/src/annotations/bindingtype/checkdefaults/server">
                                <include name="AddNumbersImpl.java" />
                                <include name="NegativeNumbersException.java" />
                        </fileset>
                        <filterset id="replace.filter.bindingTypeDefault">
                        <filter token="REPLACE_WITH_BINDING_TYPE" value=""/>
                                <filter token="REPLACE_WITH_PACKAGE_IDENTIFIER" value="Default"/>
                        </filterset>
                </copy>

                <copy todir="${FVT.build.work.dir}/annotations/bindingtype/checkdefaults/server11" overwrite="yes">
                        <fileset dir="${FVT.base.dir}/src/annotations/bindingtype/checkdefaults/server">
                                <include name="AddNumbersImpl.java" />
                                <include name="NegativeNumbersException.java" />
                        </fileset>
                        <filterset id="replace.filter.bindingType11">
                        <filter token="REPLACE_WITH_BINDING_TYPE" value="value=SOAPBinding.SOAP11HTTP_BINDING"/>
                                <filter token="REPLACE_WITH_PACKAGE_IDENTIFIER" value="11"/>
                        </filterset>
                </copy>

                <!-- soap12 tests -->

                <copy file="${FVT.base.dir}/src/annotations/bindingtype/checkdefaults/server/AddNumbersImpl12.java"
                     tofile="${FVT.build.work.dir}/annotations/bindingtype/checkdefaults/server12/AddNumbersImpl.java" overwrite="yes" />

                <copy todir="${FVT.build.work.dir}/annotations/bindingtype/checkdefaults/server12" overwrite="yes">
                        <fileset dir="${FVT.base.dir}/src/annotations/bindingtype/checkdefaults/server">
                                <include name="NegativeNumbersException.java" />
                        </fileset>
                        <filterset id="replace.filter.bindingType11">
                        <filter token="REPLACE_WITH_BINDING_TYPE" value="value=SOAPBinding.SOAP11HTTP_BINDING"/>
                                <filter token="REPLACE_WITH_PACKAGE_IDENTIFIER" value="12"/>
                        </filterset>
                </copy>


                <javac compiler="modern" srcdir="${FVT.build.work.dir}/annotations/bindingtype/checkdefaults"
                        destdir="${FVT.build.classes.dir}"
                        deprecation="${deprecation}"
                        debug="${debug}"
                	    source="${build.tests.with.java.level}"
                	    target="${build.tests.with.java.level}"
                        failonerror="${failonerror}">
                        <classpath refid="classpath" />
                        <include name="**/server*/*.java" />
                </javac>

                <mkdir dir="${FVT.build.work.dir}/annotations/bindingtype/checkdefaults/serverDefault/gen" />
                <mkdir dir="${FVT.build.work.dir}/annotations/bindingtype/checkdefaults/server11/gen" />
                <mkdir dir="${FVT.build.work.dir}/annotations/bindingtype/checkdefaults/server12/gen" />
   <!--             <wsgen genwsdl="true"
                        keep="true"
                        verbose="true"
                        destdir="${FVT.build.work.dir}"
                        resourcedestdir="${FVT.build.work.dir}/annotations/bindingtype/checkdefaults/serverDefault/gen"
                        sei="annotations.bindingtype.checkdefaults.serverDefault.AddNumbersImpl"
                        classpath="${FVT.build.classes.dir}">
                        <classpath refid="classpath" />
                </wsgen>-->
				<java classname="com.sun.tools.ws.WsGen" classpathref="WsimportJavaClasspath" dir="${basedir}" fork="true" spawn="false" maxmemory="1024m" failonerror="true" taskname="run.wsgen" >
					<arg value="-r" />
					<arg value="${FVT.build.work.dir}/annotations/bindingtype/checkdefaults/serverDefault/gen" />
					<arg value="-d" />
					<arg value="${FVT.build.work.dir}" />
					<arg value="-verbose" />
					<arg value="-keep" />
					<arg value="-J-source"/>
					<arg value="-J1.6"/>
					<arg value="-J-target"/>
					<arg value="-J1.6"/>
					<arg value="-cp"/>	
					<arg value="${FVT.build.classes.dir}"/>
					<arg value="-wsdl"/>	
					<arg value="annotations.bindingtype.checkdefaults.serverDefault.AddNumbersImpl" />
				</java>
<!--                <wsgen genwsdl="true"
                        keep="true"
                        verbose="true"
                        destdir="${FVT.build.work.dir}"
                        resourcedestdir="${FVT.build.work.dir}/annotations/bindingtype/checkdefaults/server11/gen"
                        sei="annotations.bindingtype.checkdefaults.server11.AddNumbersImpl">
                        <classpath refid="classpath" />
                </wsgen>-->
				<java classname="com.sun.tools.ws.WsGen" classpathref="WsimportJavaClasspath" dir="${basedir}" fork="true" spawn="false" maxmemory="1024m" failonerror="true" taskname="run.wsgen" >
					<arg value="-r" />
					<arg value="${FVT.build.work.dir}/annotations/bindingtype/checkdefaults/server11/gen" />
					<arg value="-d" />
					<arg value="${FVT.build.work.dir}" />
					<arg value="-verbose" />
					<arg value="-keep" />
					<arg value="-J-source"/>
					<arg value="-J1.6"/>
					<arg value="-J-target"/>
					<arg value="-J1.6"/>
					<arg value="-cp"/>	
					<arg value="${FVT.build.classes.dir}"/>
					<arg value="-wsdl"/>	
					<arg value="annotations.bindingtype.checkdefaults.server11.AddNumbersImpl" />
				</java>
                <!-- Add these options below to enforce SOAP12HTTP binding
                         protocol="Xsoap1.2" extension="true" -->
<!--                <wsgen genwsdl="true"
                        protocol="Xsoap1.2"
                        extension="true"
                        keep="true"
                        verbose="true"
                        destdir="${FVT.build.work.dir}"
                        resourcedestdir="${FVT.build.work.dir}/annotations/bindingtype/checkdefaults/server12/gen"
                        sei="annotations.bindingtype.checkdefaults.server12.AddNumbersImpl"
                        classpath="${FVT.build.classes.dir}">
                        <classpath refid="classpath" />
                </wsgen>-->
				<java classname="com.sun.tools.ws.WsGen" classpathref="WsimportJavaClasspath" dir="${basedir}" fork="true" spawn="false" maxmemory="1024m" failonerror="true" taskname="run.wsgen" >
					<arg value="-r" />
					<arg value="${FVT.build.work.dir}/annotations/bindingtype/checkdefaults/server12/gen" />
					<arg value="-d" />
					<arg value="${FVT.build.work.dir}" />
					<arg value="-verbose" />
					<arg value="-keep" />
					<arg value="-J-source"/>
					<arg value="-J1.6"/>
					<arg value="-J-target"/>
					<arg value="-J1.6"/>
					<arg value="-cp"/>	
					<arg value="${FVT.build.classes.dir}"/>
					<arg value="-wsdl:Xsoap1.2"/>
					<arg value="-extension"/>
					<arg value="annotations.bindingtype.checkdefaults.server12.AddNumbersImpl" />
				</java>
                <war warfile="${FVT.build.lib.dir}/BT11AddNumbersImplService.war"
                        webxml="${FVT.base.dir}/src/annotations/bindingtype/checkdefaults/etc/server11/web.xml">
                        <!-- get the impl class -->
                        <classes dir="${FVT.build.classes.dir}">
                                <include name="annotations/bindingtype/checkdefaults/server11/**/*.class" />
                        </classes>
                        <!-- get the jaxws genned classes and the impl src -->
                        <classes dir="${FVT.build.work.dir}">
                                <include name="annotations/bindingtype/checkdefaults/server11/**/*.class" />
                                <include name="annotations/bindingtype/checkdefaults/server11/**/*.java" />
                        </classes>
                </war>

                <delete file="${FVT.build.lib.dir}/BT12AddNumbersImplService.war" />
                <war warfile="${FVT.build.lib.dir}/BT12AddNumbersImplService.war"
                        webxml="${FVT.base.dir}/src/annotations/bindingtype/checkdefaults/etc/server12/web.xml">

                        <zipfileset dir="${FVT.build.work.dir}/annotations/bindingtype/checkdefaults/server12/gen" prefix="WEB-INF/wsdl">
                           <include name="*wsdl" />
                           <include name="*xsd"  />
                        </zipfileset>
                        <classes dir="${FVT.build.classes.dir}">
                                <include name="annotations/bindingtype/checkdefaults/server12/**/*.class" />
                        </classes>
                        <classes dir="${FVT.build.work.dir}">
                                <include name="annotations/bindingtype/checkdefaults/server12/**/*.class" />
                                <include name="annotations/bindingtype/checkdefaults/server12/**/*.java" />
                        </classes>
                </war>

                <ear earfile="${FVT.build.installableApps.dir}/BT11AddNumbersImplService.ear"
                 appxml="${FVT.base.dir}/src/annotations/bindingtype/checkdefaults/etc/server11/application.xml">
                        <fileset dir="${FVT.build.lib.dir}">
                                <include name="BT11AddNumbersImplService.war"/>
                        </fileset>
                </ear>

                <delete file="${FVT.build.installableApps.dir}/BT12AddNumbersImplService.ear" />
                <ear earfile="${FVT.build.installableApps.dir}/BT12AddNumbersImplService.ear"
                 appxml="${FVT.base.dir}/src/annotations/bindingtype/checkdefaults/etc/server12/application.xml">
                        <fileset dir="${FVT.build.lib.dir}">
                                <include name="BT12AddNumbersImplService.war"/>
                        </fileset>
                </ear>
        </target>

        <!-- The client target will build anything necessary for the client
                piece of the test.  This could just be compiling the client class
                or in the case of a managed client, building a client side EAR
                file. -->

        <!-- todo: use wsgen produced wsdl, not wsdl in source tree, so if server changes, test doesn't break -->
        <target name="client" depends="setenv">

                <copy todir="${FVT.build.work.dir}/annotations/bindingtype/checkdefaults/client" overwrite="yes">
                        <fileset dir="${FVT.base.dir}/src/annotations/bindingtype/checkdefaults/client">
                                <include name="AddNumbersClient*.java" />
                        </fileset>
                </copy>

                <!-- this task injects all the topologyProps.props data into Ant properites beginning with "prefix."... -->
                <!-- then we'll use them to adjust the host and port -->
                <readCellConfig prefix="server1" key="defaultServer" verbose="false" />

                <copy todir="${FVT.build.work.dir}/annotations/bindingtype/checkdefaults/server11" overwrite="yes">
                        <fileset dir="${FVT.base.dir}/src/annotations/bindingtype/checkdefaults/etc/server11/wsdl">
                                <include name="AddNumbersImplService*" />
                        </fileset>
                        <filterset id="replace.filter.set1">
                                <filter token="REPLACE_WITH_HOST_NAME" value="${server1.hostName}"/>
                                <filter token="REPLACE_WITH_PORT_NUM"  value="${server1.WC_defaulthost}"/>
                        </filterset>
                </copy>

                <copy todir="${FVT.build.work.dir}/annotations/bindingtype/checkdefaults/server12" overwrite="yes">
                        <fileset dir="${FVT.base.dir}/src/annotations/bindingtype/checkdefaults/etc/server12/wsdl">
                                <include name="AddNumbersImplService*" />
                        </fileset>
                        <filterset id="replace.filter.set1b">
                                <filter token="REPLACE_WITH_HOST_NAME" value="${server1.hostName}"/>
                                <filter token="REPLACE_WITH_PORT_NUM"  value="${server1.WC_defaulthost}"/>
                        </filterset>
                </copy>



<!--                <wsimport keep="true" verbose="true" destdir="${FVT.build.classes.dir}"
                        wsdl="${FVT.build.work.dir}/annotations/bindingtype/checkdefaults/server11/AddNumbersImplService.wsdl"
                        wsdllocation="http://${server1.hostName}:${server1.WC_defaulthost}/bindingtype11/services/BT11AddNumbersImplService?wsdl"
                >

	
                </wsimport>-->
        	
			<java classname="com.sun.tools.ws.WsImport" classpathref="WsimportJavaClasspath" dir="${basedir}" fork="true" spawn="false" maxmemory="1024m" failonerror="true" taskname="run.wsimport" >
				<arg value="-d" />
				<arg value="${FVT.build.classes.dir}" />
				<arg value="-verbose" />
				<arg value="-keep" />
				<arg value="-J-source"/>
				<arg value="-J1.6"/>
				<arg value="-J-target"/>
				<arg value="-J1.6"/>			
				<arg value="-wsdllocation" />
				<arg value="http://${server1.hostName}:${server1.WC_defaulthost}/bindingtype11/services/BT11AddNumbersImplService?wsdl" />
				<arg value="${FVT.build.work.dir}/annotations/bindingtype/checkdefaults/server11/AddNumbersImplService.wsdl" />
			</java>

 <!--               <wsimport keep="true" verbose="true" destdir="${FVT.build.classes.dir}" extension="true"
                        wsdl="${FVT.build.work.dir}/annotations/bindingtype/checkdefaults/server12/AddNumbersImplService.wsdl"
                        wsdllocation="http://${server1.hostName}:${server1.WC_defaulthost}/bindingtype12/services/BT12AddNumbersImplService?wsdl"
                >
                </wsimport>-->
	<java classname="com.sun.tools.ws.WsImport" classpathref="WsimportJavaClasspath" dir="${basedir}" fork="true" spawn="false" maxmemory="1024m" failonerror="true" taskname="run.wsimport" >
		<sysproperty key="javax.xml.accessExternalSchema" value="all" />
		<arg value="-d" />
		<arg value="${FVT.build.classes.dir}" />
		<arg value="-verbose" />
		<arg value="-keep" />
		<arg value="-J-source"/>
		<arg value="-J1.6"/>
		<arg value="-J-target"/>
		<arg value="-J1.6"/>
		<arg value="-extension"/>
		<arg value="-wsdllocation" />
		<arg value="http://${server1.hostName}:${server1.WC_defaulthost}/bindingtype12/services/BT12AddNumbersImplService?wsdl" />
		<arg value="${FVT.build.work.dir}/annotations/bindingtype/checkdefaults/server12/AddNumbersImplService.wsdl" />
	</java>


                <javac compiler="modern"
                        srcdir="${FVT.build.work.dir}/annotations/bindingtype/checkdefaults"
                        destdir="${FVT.build.classes.dir}"
                        deprecation="${deprecation}"
                        debug="${debug}"
                	    source="${build.tests.with.java.level}"
                	    target="${build.tests.with.java.level}"
                        failonerror="${failonerror}">
                        <classpath refid="classpath" />
                        <include name="**/client*/*.java" />
                </javac>
        </target>


        <!-- The client target will build anything necessary for the test
                piece of the test.  Often this will just include compiling the
                the JUnit test case file. -->
        <target name="test" depends="setenv">
                <javac compiler="modern" srcdir="${FVT.base.dir}/src/annotations/bindingtype/checkdefaults"
                        destdir="${FVT.build.classes.dir}"
                        deprecation="${deprecation}"
                        debug="${debug}"
                	    source="${build.tests.with.java.level}"
                	    target="${build.tests.with.java.level}"
                        failonerror="${failonerror}">
                        <classpath refid="classpath" />
                        <include name="**/test/*.java" />
                </javac>
        </target>

        <!-- The preinstall target will perform any tasks necessary before the
               application is installed into WebSphere.  This could include running
               ejbdeploy or endptenabler for an EAR that contains an EJB.
          -->
        <target name="preinstall" depends="setenv">
        </target>

        <!-- The install target will install the server side piece of the test
               into WebSphere.  This target calls the installTest.xml file for
               the test -->
        <target name="install" depends="setenv">
           <ant antfile="${FVT.base.dir}/src/annotations/bindingtype/checkdefaults/installTest.xml"
                dir="${FVT.base.dir}/src/annotations/bindingtype/checkdefaults">
             <property name="install.mode" value="${rt.install.mode}"/>
           </ant>
        </target>

        <!-- The uninstall target will uninstall the server side piece of the test
               from WebSphere.  This target calls the uninstallTest.xml file for
               the test -->
        <target name="uninstall" depends="setenv">
           <ant antfile="${FVT.base.dir}/src/annotations/bindingtype/checkdefaults/uninstallTest.xml"
                dir="${FVT.base.dir}/src/annotations/bindingtype/checkdefaults">
                <property name="uninstall.mode" value="${rt.uninstall.mode}"/>
           </ant>
        </target>
</project>





