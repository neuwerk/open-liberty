<?xml version="1.0"?>
<!DOCTYPE project [
    <!ENTITY instance SYSTEM "../../../../instance.xml"><!-- file:30 -->
<!ENTITY properties SYSTEM "../../../xmls/properties.xml"><!-- file:28 -->
<!ENTITY paths SYSTEM "../../../xmls/path_refs.xml"><!-- file:23 -->
<!ENTITY targets SYSTEM "../../../xmls/targets.xml"><!-- file:25 -->
<!ENTITY taskdefs SYSTEM "../../../xmls/taskdefs.xml"><!-- file:26 -->
<!ENTITY taskdefs_post_compile SYSTEM "../../../xmls/taskdefs_post_compile.xml"><!-- file:39 -->
]>

<!-- 1.1.1.2, 8/3/07
	
	Description: Build file for the webserviceclient/checkdefaults test.
	
	Date        Author       Feature/Defect          Description
	07/05/2006  euzunca      LIDB3296.31.01          New File
-->

<project name="build" default="buildall" basedir=".">


	<!-- These are XML entity refs.  Basically these statements cause the
		files declared in the DOCTYPE at the top of the file to be imported
		into this build file. -->
	  &instance;
	  &properties;
	  &paths;
	  &targets;
	  &taskdefs;
	  &taskdefs_post_compile;

	<!-- This property should match the package name of the test class.  The
		property is used in the targets.xml file when running any of the
		component-run* targets for running a single test case class. -->
	<property name="componentName"
		value="annotations/webserviceclient/checkdefaults/test" />


	<!-- This path id is used in the targets.xml file when running any of
		the component-run* targets.  This allows setting the classpath 
		for an individual test. -->
	<path id="componentClasspath">
		<path refid="thinclientclasspath" />
	</path>


	<!-- The buildall target will execute all of the targets necessary
		before installing the test into WebSphere. -->
	<target name="buildall" depends="setenv, clean, init, client, test, preinstall" />

	<!-- The clean target will clean any files, classes, or directories
		so that a new copy of the test can be built and run. -->
	<target name="clean" depends="setenv">
		<delete dir="${FVT.build.classes.dir}/annotations/ebserviceclient/checkdefaults" />
		<delete dir="${FVT.build.work.dir}/annotations/webserviceclient/checkdefaults" />
	</target>


	<!-- The init target will initialize any directories, properties, etc.
		that are needed for the test. -->
	<target name="init" depends="setenv">
		<antcall target="component-init" />
		<mkdir dir="${FVT.build.work.dir}/annotations/webserviceclient/checkdefaults" />
	</target>

	<target name="client" depends="setenv">
		<copy todir="${FVT.build.work.dir}/annotations/webserviceclient/checkdefaults/server" overwrite="yes">
			<fileset dir="${FVT.base.dir}/src/annotations/webserviceclient/checkdefaults/etc">
				<include name="AddNumbersImplService.wsdl" />
				<include name="AddNumbersImplService_schema1.xsd" />
			</fileset>
			<filterset id="replace.filter.set1">
				<filter token="REPLACE_WITH_HOST_NAME" value="${new.default.host}"/>
				<filter token="REPLACE_WITH_PORT_NUM"  value="${new.wc.defaulthost}"/>
			</filterset>
		</copy>

		<wsimport keep="true" verbose="false"
			destdir="${FVT.build.classes.dir}"
			wsdl="${FVT.build.work.dir}/annotations/webserviceclient/checkdefaults/server/AddNumbersImplService.wsdl">
		</wsimport>
	</target>

	<!-- The client target will build anything necessary for the test piece of the test.
		Often this will just include compiling the the JUnit test case file. -->
	<target name="test" depends="setenv">
		<javac compiler="modern" srcdir="${FVT.base.dir}/src/annotations/webserviceclient/checkdefaults" 
			destdir="${FVT.build.classes.dir}" 
			deprecation="${deprecation}" 
			debug="${debug}"
			source="${build.tests.with.java.level}"
		    target="${build.tests.with.java.level}"
			failonerror="${failonerror}">
			<classpath refid="thinclientclasspath" />
			<include name="**/test/*.java" />
		</javac>
	</target>

	<!-- The preinstall target will perform any tasks necessary before the
	       application is installed into WebSphere.  This could include running
	       ejbdeploy or endptenabler for an EAR that contains an EJB. -->
	<target name="preinstall" depends="setenv">
	</target>
</project>





